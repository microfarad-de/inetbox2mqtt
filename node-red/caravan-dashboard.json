[
    {
        "id": "37a752f35a68bbed",
        "type": "tab",
        "label": "Top",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b22624498baaa896",
        "type": "tab",
        "label": "Energy",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2561d49b29c858c7",
        "type": "tab",
        "label": "Environment",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c74d4096e08fa272",
        "type": "tab",
        "label": "Heating",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fcffa944a0680a42",
        "type": "tab",
        "label": "Fridge",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "23d77242da9abfeb",
        "type": "tab",
        "label": "Alerts",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fc670f602d442a02",
        "type": "tab",
        "label": "Settings",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "26a48bdabf7607df",
        "type": "subflow",
        "name": "Alarm",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 120,
                "wires": [
                    {
                        "id": "e7756b84d8b39dfb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 500,
                "y": 100,
                "wires": [
                    {
                        "id": "e7756b84d8b39dfb",
                        "port": 0
                    }
                ]
            },
            {
                "x": 500,
                "y": 160,
                "wires": [
                    {
                        "id": "e7756b84d8b39dfb",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "low",
                "type": "str",
                "value": "0"
            },
            {
                "name": "high",
                "type": "str",
                "value": "100"
            },
            {
                "name": "threshold",
                "type": "num",
                "value": "1"
            },
            {
                "name": "message",
                "type": "str",
                "value": "Indoor temperature"
            },
            {
                "name": "unit",
                "type": "str",
                "value": "°C"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "43e263465d4c8532",
        "type": "subflow",
        "name": "Offset",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 100,
                "wires": [
                    {
                        "id": "19512b00b559aaaf"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 100,
                "wires": [
                    {
                        "id": "19512b00b559aaaf",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "offset",
                "type": "str",
                "value": "0"
            },
            {
                "name": "rounding",
                "type": "num",
                "value": "1"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "2b1e3a255c9f7549",
        "type": "subflow",
        "name": "Retransmit",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 180,
                "wires": [
                    {
                        "id": "2144215108e68bb4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 500,
                "y": 140,
                "wires": [
                    {
                        "id": "2144215108e68bb4",
                        "port": 0
                    }
                ]
            },
            {
                "x": 500,
                "y": 220,
                "wires": [
                    {
                        "id": "2144215108e68bb4",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "topic",
                "type": "str",
                "value": "temp"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c515380878a4716f",
        "type": "subflow",
        "name": "Propane %",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 160,
                "wires": [
                    {
                        "id": "5e9aa1427a4e9455"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 160,
                "wires": [
                    {
                        "id": "5e9aa1427a4e9455",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "empty",
                "type": "num",
                "value": "4"
            },
            {
                "name": "full",
                "type": "num",
                "value": "36.5"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "35877746e13a44de",
        "type": "subflow",
        "name": "Unit",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 220,
                "wires": [
                    {
                        "id": "ac9ffcf81506378b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 220,
                "wires": [
                    {
                        "id": "ac9ffcf81506378b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "unit",
                "type": "str",
                "value": "°C"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1bca7697946c1d3f",
        "type": "subflow",
        "name": "Stars",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 160,
                "wires": [
                    {
                        "id": "a3d2410121093268"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 580,
                "y": 160,
                "wires": [
                    {
                        "id": "a3d2410121093268",
                        "port": 0
                    }
                ]
            },
            {
                "x": 580,
                "y": 220,
                "wires": [
                    {
                        "id": "a3d2410121093268",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c37eefbf57ce59ee",
        "type": "subflow",
        "name": "Parse JSON",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 180,
                "wires": [
                    {
                        "id": "d43cc1974dbb38fb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 160,
                "wires": [
                    {
                        "id": "d43cc1974dbb38fb",
                        "port": 0
                    }
                ]
            },
            {
                "x": 540,
                "y": 220,
                "wires": [
                    {
                        "id": "d43cc1974dbb38fb",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "04a8d6feb3e5bdc7",
        "type": "subflow",
        "name": "Topic",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 220,
                "wires": [
                    {
                        "id": "596159eb11ca95b3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 220,
                "wires": [
                    {
                        "id": "596159eb11ca95b3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "topic",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "521836fa35cf581b",
        "type": "subflow",
        "name": "Gate",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 320,
                "y": 320,
                "wires": [
                    {
                        "id": "070ca012bd78c327"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 260,
                "wires": [
                    {
                        "id": "070ca012bd78c327",
                        "port": 0
                    }
                ]
            },
            {
                "x": 660,
                "y": 320,
                "wires": [
                    {
                        "id": "070ca012bd78c327",
                        "port": 1
                    }
                ]
            },
            {
                "x": 660,
                "y": 380,
                "wires": [
                    {
                        "id": "070ca012bd78c327",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1230e5122b3b7f25",
        "type": "subflow",
        "name": "Alarm 2",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 260,
                "y": 160,
                "wires": [
                    {
                        "id": "726fadf09d45220a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 160,
                "wires": [
                    {
                        "id": "726fadf09d45220a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "message",
                "type": "str",
                "value": "Truma"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "2c24d1c82633c69e",
        "type": "mqtt-broker",
        "name": "Venus",
        "broker": "localhost",
        "port": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "victron-client-id",
        "type": "victron-client"
    },
    {
        "id": "9fb9e907fe35fd83",
        "type": "node-red-contrib-whatsapp-cmb-account",
        "name": "Karim"
    },
    {
        "id": "93cf16ef6c7e509b",
        "type": "ui-base",
        "name": "Caravan",
        "path": "/dashboard",
        "appIcon": "https://www.microfarad.de/wp-content/uploads/caravan-icon.png",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "headerContent": "page",
        "navigationStyle": "default",
        "titleBarStyle": "fixed",
        "showReconnectNotification": true,
        "notificationDisplayTime": "1",
        "showDisconnectNotification": true,
        "allowInstall": true
    },
    {
        "id": "7fbe7ff5e2bd848b",
        "type": "ui-theme",
        "name": "Dark theme",
        "colors": {
            "surface": "#0470ba",
            "primary": "#0094ce",
            "bgPage": "#595959",
            "groupBg": "#303030",
            "groupOutline": "#000000"
        },
        "sizes": {
            "density": "comfortable",
            "pagePadding": "1px",
            "groupGap": "1px",
            "groupBorderRadius": "3px",
            "widgetGap": "16px"
        }
    },
    {
        "id": "f6f4c01f1f6329b6",
        "type": "ui-page",
        "name": "Environment",
        "ui": "93cf16ef6c7e509b",
        "path": "/environment",
        "icon": "thermometer",
        "layout": "grid",
        "theme": "7fbe7ff5e2bd848b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "6"
            }
        ],
        "order": 3,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "2b74e6ea7cedf9dc",
        "type": "ui-group",
        "name": "Environment",
        "page": "c4300ca17ae61646",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "f38228eceb5426aa",
        "type": "ui-group",
        "name": "Indoor",
        "page": "f6f4c01f1f6329b6",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "64aefdbb4f4733ee",
        "type": "ui-group",
        "name": "Outdoor",
        "page": "f6f4c01f1f6329b6",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "2611ec2a3e5a9d82",
        "type": "ui-page",
        "name": "Energy",
        "ui": "93cf16ef6c7e509b",
        "path": "/energy",
        "icon": "lightning-bolt",
        "layout": "grid",
        "theme": "7fbe7ff5e2bd848b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "6"
            }
        ],
        "order": 2,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "a7be90ba6585cc59",
        "type": "ui-group",
        "name": "Electricity",
        "page": "c4300ca17ae61646",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "25319c4b021b78d9",
        "type": "ui-group",
        "name": "Propane",
        "page": "c4300ca17ae61646",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "16349d9c5c0afd34",
        "type": "ui-group",
        "name": "Battery",
        "page": "2611ec2a3e5a9d82",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "459be61f93594b03",
        "type": "ui-group",
        "name": "Solar",
        "page": "2611ec2a3e5a9d82",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "17754129e662c9a6",
        "type": "ui-page",
        "name": "Disabled",
        "ui": "93cf16ef6c7e509b",
        "path": "/disabled",
        "icon": "home",
        "layout": "grid",
        "theme": "7fbe7ff5e2bd848b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 8,
        "className": "",
        "visible": false,
        "disabled": "false"
    },
    {
        "id": "1769e3f51bb550db",
        "type": "ui-group",
        "name": "Disabled",
        "page": "17754129e662c9a6",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "d379d6807d25f7bd",
        "type": "ui-page",
        "name": "Heating",
        "ui": "93cf16ef6c7e509b",
        "path": "/climate-control",
        "icon": "fire",
        "layout": "grid",
        "theme": "7fbe7ff5e2bd848b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "6"
            }
        ],
        "order": 4,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "df7a1670ae765f1d",
        "type": "ui-group",
        "name": "Control",
        "page": "d379d6807d25f7bd",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "fc3c351e5707cb90",
        "type": "ui-group",
        "name": "Status",
        "page": "d379d6807d25f7bd",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e96f88435ad61c8c",
        "type": "ui-spacer",
        "group": "576d8789f70030f1",
        "name": "spacer",
        "tooltip": "",
        "order": 6,
        "width": 6,
        "height": 1,
        "className": ""
    },
    {
        "id": "9f97964497613b18",
        "type": "ui-spacer",
        "group": "fc3c351e5707cb90",
        "name": "spacer",
        "tooltip": "",
        "order": 4,
        "width": "6",
        "height": "2",
        "className": ""
    },
    {
        "id": "e57b48aa09852086",
        "type": "ui-spacer",
        "group": "ba0d9a414ff3a20d",
        "name": "spacer",
        "tooltip": "",
        "order": 5,
        "width": "6",
        "height": "1",
        "className": ""
    },
    {
        "id": "f95ee2972e7966ef",
        "type": "ui-spacer",
        "group": "2e561758ea16e0b5",
        "name": "spacer",
        "tooltip": "",
        "order": 7,
        "width": "6",
        "height": "1",
        "className": ""
    },
    {
        "id": "c4300ca17ae61646",
        "type": "ui-page",
        "name": "Overview",
        "ui": "93cf16ef6c7e509b",
        "path": "/overview",
        "icon": "home",
        "layout": "grid",
        "theme": "7fbe7ff5e2bd848b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "6"
            }
        ],
        "order": 1,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "2e561758ea16e0b5",
        "type": "ui-group",
        "name": "Propane",
        "page": "2611ec2a3e5a9d82",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "bc614f1d5f7543e9",
        "type": "ui-group",
        "name": "Heating",
        "page": "c4300ca17ae61646",
        "width": "6",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "ba0d9a414ff3a20d",
        "type": "ui-group",
        "name": "Sensor Battery",
        "page": "f6f4c01f1f6329b6",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9f3f4a16e11a48a1",
        "type": "ui-page",
        "name": "Fridge",
        "ui": "93cf16ef6c7e509b",
        "path": "/fridge",
        "icon": "snowflake",
        "layout": "grid",
        "theme": "7fbe7ff5e2bd848b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "6"
            }
        ],
        "order": 5,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "0a055cab4c53c810",
        "type": "ui-group",
        "name": "Control",
        "page": "9f3f4a16e11a48a1",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "9ce95c5084b7683e",
        "type": "ui-group",
        "name": "Status",
        "page": "9f3f4a16e11a48a1",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c58e14815b2985ea",
        "type": "ui-spacer",
        "group": "9ce95c5084b7683e",
        "name": "Spacer",
        "tooltip": "",
        "order": 7,
        "width": "6",
        "height": "1",
        "className": ""
    },
    {
        "id": "a83899c86106d047",
        "type": "global-config",
        "name": "global-config",
        "env": [
            {
                "name": "system-settings-file",
                "value": "/data/home/nodered/caravan-settings.json",
                "type": "str"
            },
            {
                "name": "fridge-gpio-pin",
                "value": "26",
                "type": "str"
            },
            {
                "name": "serial-device",
                "value": "/dev/rfcomm0",
                "type": "str"
            },
            {
                "name": "serial-baud",
                "value": "9600",
                "type": "str"
            }
        ]
    },
    {
        "id": "576d8789f70030f1",
        "type": "ui-group",
        "name": "Fridge",
        "page": "c4300ca17ae61646",
        "width": "6",
        "height": "1",
        "order": 5,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "b54e758b3b69d202",
        "type": "ui-page",
        "name": "Settings",
        "ui": "93cf16ef6c7e509b",
        "path": "/settings",
        "icon": "cog",
        "layout": "tabs",
        "theme": "7fbe7ff5e2bd848b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "6"
            }
        ],
        "order": 7,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "28b10b40908e96b0",
        "type": "ui-group",
        "name": "Fridge",
        "page": "b54e758b3b69d202",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "87a251b1b078a4c3",
        "type": "ui-group",
        "name": "Alerts",
        "page": "b54e758b3b69d202",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7a52027f8ab130e8",
        "type": "ui-group",
        "name": "Offsets",
        "page": "b54e758b3b69d202",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7fb822c8e67236bf",
        "type": "ui-spacer",
        "group": "87a251b1b078a4c3",
        "name": "spacer",
        "tooltip": "",
        "order": 24,
        "width": "6",
        "height": "1",
        "className": ""
    },
    {
        "id": "ea8f96f0b15f8f26",
        "type": "ui-page",
        "name": "Alerts",
        "ui": "93cf16ef6c7e509b",
        "path": "/alerts",
        "icon": "bell-alert",
        "layout": "grid",
        "theme": "7fbe7ff5e2bd848b",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "6"
            }
        ],
        "order": 6,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "959cc79e3a0c6c7d",
        "type": "ui-group",
        "name": "Messages",
        "page": "ea8f96f0b15f8f26",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "51090c9f384339f7",
        "type": "ui-spacer",
        "group": "959cc79e3a0c6c7d",
        "name": "spacer",
        "tooltip": "",
        "order": 2,
        "width": "6",
        "height": "1",
        "className": ""
    },
    {
        "id": "e7756b84d8b39dfb",
        "type": "function",
        "z": "26a48bdabf7607df",
        "name": "Alarm",
        "func": "\nfunction resolveValue(input) {\n    // Check if the input is a number (int or float)\n    if (!isNaN(input) && String(input).trim() !== \"\") {\n        return Number(input);\n    } else {\n        // Otherwise, treat it as a global variable name\n        return global.get(input);\n    }\n}\n\n\nlet val = +msg.payload;  // Convert to an integer\n\nlet low     = resolveValue(env.get('low'));\nlet high    = resolveValue(env.get('high'));\nlet thr     = env.get('threshold');\nlet message = env.get('message');\nlet unit    = env.get('unit');\nlet style   = {\"ui_update\": {\"class\": \"\"}};\nlet alerts  = global.get(\"alerts\") || {};\n\nlet lastAlarm = context.get('lastAlarm') || false;\nlet alarm = false;\n\nif (val < low) {\n    alarm = 'low';\n}\nelse if (val > high) {\n    alarm = 'high';\n}\nelse if (val > (low + thr) && val < (high - thr)) {\n    alarm = false;\n    context.set('lastAlarm', alarm);\n    delete alerts[message];\n    global.set(\"alerts\", alerts);\n    return [null, style];\n}\n//node.warn(`val=${val}, low=${low}, high=${high}, thr=${thr}, alarm=${alarm}, lastAlarm=${lastAlarm}`);\n\nif (alarm && alarm != lastAlarm) {\n    context.set('lastAlarm', alarm);\n    style.ui_update.class = \"error\";\n    msg.payload = `⚠️ Caravan alert!\\n${message}: ${val} ${unit}`;\n    let text    = `⚠️ ${message}: ${val} ${unit}`\n    node.warn(text);\n    alerts[message] = text;\n    global.set(\"alerts\", alerts);\n    return [msg, style];\n}\nelse {\n    return null;\n}\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 120,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "19512b00b559aaaf",
        "type": "function",
        "z": "43e263465d4c8532",
        "name": "Offset",
        "func": "\nfunction resolveValue(input) {\n    // Check if the input is a number (int or float)\n    if (!isNaN(input) && String(input).trim() !== \"\") {\n        return Number(input);\n    } else {\n        // Otherwise, treat it as a global variable name\n        return global.get(input);\n    }\n}\n\n\nlet temp = msg.payload;\n\noffset   = resolveValue(env.get('offset'));\nrounding = env.get('rounding');\n\ntemp = temp + offset;\n\nmsg.payload = +(+temp).toFixed(rounding);\nmsg.raw     = temp;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2144215108e68bb4",
        "type": "function",
        "z": "2b1e3a255c9f7549",
        "name": "Retransmit",
        "func": "\n// Resend the message if setting has not been applied\n\ntopic = env.get('topic');\nstate = context.get('state');\n\nif (msg.topic === topic) {\n   \n    node.log(`Sent: ${topic} = ${msg.payload}`);\n    context.set('state', msg.payload);\n    \n    let msg1 = {};\n    msg1.topic     = topic;\n    msg1.ui_update = {};\n    msg1.ui_update.class = 'modified';\n    \n    return [msg1, msg];\n}\nelse {\n    \n    if (state !== undefined) {\n    \n        if (msg.payload === state) {\n            node.log(`Confirmed: ${topic} = ${msg.payload}`);\n            context.set('state', undefined);\n            \n            msg.ui_update = {};\n            msg.ui_update.class = '';\n            \n            return [msg, null];\n        }\n        else {\n            msg.payload = state;\n            node.log(`Resent: ${topic} = ${msg.payload}`);\n            return [null, msg];\n        }\n        \n    }\n    else {\n        return [msg, null];\n    }\n    \n}\n\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5e9aa1427a4e9455",
        "type": "function",
        "z": "c515380878a4716f",
        "name": "PropanePercent",
        "func": "\n/*\nconst DEBUG = false;\n\n// Handle accelerometer readings\n// detect propan tank movement or swap\nif (msg.topic === 'acceleration') {\n    if (Math.abs(msg.payload) > 0.5) {\n        if (DEBUG) node.warn(`Accel = ${msg.payload}, reset last-percent`);\n        context.set('last-percent', 100);\n        \n    }\n    return null;\n}\n*/\n\nempty = env.get('empty');\nfull  = env.get('full');\nlevel = msg.payload;\n\npercent = 100 * (level - empty) / (full - empty);\n\nif (percent > 100) {\n    percent = 100;\n}\n\nif (percent < 0) {\n    percent = 0;\n}\n\n/*\n// Percent never increases unless a full propane tank\n// has been installed or the vehicle is moving.\nlastPercent = context.get('last-percent');\nif (lastPercent === undefined) {\n    lastPercent = 100;\n}\nif (DEBUG) node.warn(`last-percent = ${lastPercent}`);\n\nif (percent < lastPercent) {\n    let p = (percent + 19*lastPercent) / 20;\n    if (DEBUG) node.warn(`set last-percent = ${p}`);\n    context.set('last-percent', p);\n}\nelse {\n    if (DEBUG) node.warn(`set percent = ${lastPercent}`);\n    percent = lastPercent;\n}\n*/\n\nmsg.payload = percent.toFixed(0);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ac9ffcf81506378b",
        "type": "function",
        "z": "35877746e13a44de",
        "name": "AppendUnit",
        "func": "\nlet unit = env.get('unit');\n\nmsg.payload = msg.payload + ' ' + unit;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a3d2410121093268",
        "type": "function",
        "z": "1bca7697946c1d3f",
        "name": "Stars",
        "func": "\nswitch (msg.payload) {\n    case 1:\n        msg.payload = \"★\";\n        break;\n    case 2:\n        msg.payload = \"★★\";\n        break;\n    case 3:\n        msg.payload = \"★★★\";\n        break;\n    default:\n        msg.payload = \"--\";\n        break;\n}\n\nlet msg2 = {};\nmsg2.ui_update = {};\nmsg2.ui_update.units = msg.payload + \" %\";\n\nreturn [msg2, msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 160,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d43cc1974dbb38fb",
        "type": "function",
        "z": "c37eefbf57ce59ee",
        "name": "ParseJSON",
        "func": "\nlet output = { payload: {} };\nlet status = {};\nstatus.topic = \"json\";\n\ntry {\n    output.payload = JSON.parse(msg.payload);\n    output.topic   = \"jsonConfig\"\n    status.payload = true;\n    return [output, status];\n} catch (e) {\n    //node.error(\"JSON parse failed\", msg);\n    status.payload = false;\n    return [null, status];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 180,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "596159eb11ca95b3",
        "type": "function",
        "z": "04a8d6feb3e5bdc7",
        "name": "SetTopic",
        "func": "\nif (msg.payload === undefined) {\n    return null;\n}\n\nlet topic = env.get(\"topic\");\nmsg.topic = topic\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "070ca012bd78c327",
        "type": "function",
        "z": "521836fa35cf581b",
        "name": "Gate",
        "func": "\n// Duration in milliseconds\nconst TIMEOUT = 20000; \n\nlet existingTimer = context.get(\"timer\");\nif (existingTimer) {\n    clearTimeout(existingTimer);\n}\n\n\nif (msg.topic === \"apply\") {\n    let output = {};\n    let keys = context.keys();\n    keys = keys.filter(k => k !== \"timer\");\n    for (let i = 0; i < keys.length; i++) {\n        output.topic   = keys[i];\n        output.payload = context.get(keys[i]);\n        context.set(keys[i], undefined);\n        node.send([output, null, {ui_update: {class: 'grayout'}}]);\n    }\n}\nelse {\n    context.set(msg.topic, msg.payload);\n    node.send([null, null, {ui_update: {class: ''}}])\n    \n    let newTimer = setTimeout(() => {\n        node.send([null, { topic: \"reset\"}, null]);\n        context.set(\"timer\", null);\n    }, TIMEOUT);\n    context.set(\"timer\", newTimer);\n}\n\nreturn null;\n\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "726fadf09d45220a",
        "type": "function",
        "z": "1230e5122b3b7f25",
        "name": "Alarm",
        "func": "\nlet val     = msg.payload;\nlet message = env.get('message');\n\nlet alerts    = global.get(\"alerts\") || {};\nlet lastAlarm = context.get('lastAlarm') || false;\nlet alarm = false;\n\nif (val === 'OK') {\n    alarm = false;\n    delete alerts[message];\n    global.set(\"alerts\", alerts);\n    context.set('lastAlarm', alarm);\n}\nelse {\n    alarm = val;\n}\n\n//node.warn(`val={val}, alarm={alarm}, lastAlarm={lastAlarm}`);\n\nif (alarm && alarm != lastAlarm) {\n    context.set('lastAlarm', alarm);\n    msg.payload = `⚠️ Caravan alert!\\n${message}:\\n${val}`;\n    text = `⚠️ ${message}: ${val}`;\n    node.warn(text);\n    alerts[message] = text;\n    global.set(\"alerts\", alerts);\n    return msg;\n}\nelse {\n    return null;\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2f93affb367a865e",
        "type": "link in",
        "z": "37a752f35a68bbed",
        "name": "Send WhatsApp",
        "links": [
            "08fe98afcefbc02c",
            "14753609f7bc5747",
            "210d9c2dfb32db9e",
            "335af24ca01463cb",
            "60b4291ab1bc4195",
            "713473bc2af8430d",
            "9141f247602e75b7",
            "dfc1f32cb802a02e",
            "e1dd06c5c761e4d9",
            "f2fa448128ce1972",
            "f59d101299f0716e",
            "f8b062643e6b87e5",
            "c9f48f0fd15a2481",
            "30ec2d30d9a6c151",
            "eb62a9a32e858911",
            "55ed9207847adf8d"
        ],
        "x": 185,
        "y": 300,
        "wires": [
            [
                "fceb7b2903eca364"
            ]
        ]
    },
    {
        "id": "fceb7b2903eca364",
        "type": "node-red-contrib-whatsapp-cmb-send-message",
        "z": "37a752f35a68bbed",
        "name": "",
        "credtype": "account",
        "account": "9fb9e907fe35fd83",
        "text": "payload",
        "phonenumbervalue": "",
        "apikeyvalue": "",
        "apikeyinputtypemessage": "msg",
        "phonenumberinputtypemessage": "msg",
        "inputtypemessage": "msg",
        "rejectssl": false,
        "x": 380,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "11fb85624a460b6f",
        "type": "ui-template",
        "z": "37a752f35a68bbed",
        "group": "",
        "page": "",
        "ui": "93cf16ef6c7e509b",
        "name": "Custom styles",
        "order": 1,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "<style>\n\n    .large-text span {\n        font-size: 26px !important;\n    }\n\n    .large-gauge-text span {\n        font-size: 26px !important;\n        padding-top: 15px !important;\n        padding-bottom: 5px !important;\n    }\n    \n    .small-gauge-text span {\n        font-size: 18px !important;\n        padding-bottom: 3px !important;\n    }\n  \n    .nrdb-ui-gauge-title {\n        font-size:16px;\n        font-weight: normal;\n    }\n    \n    .v-card-title {\n        font-size: 18px;\n        color: #4B9FF4;\n    }\n    \n    .v-btn__content {\n        font-size: 18px;\n        /*color: #4B9FF4;*/\n    }\n    \n    .v-list-item-title {\n        font-size: 18px !important;\n        padding-bottom: 6px !important;\n    }\n    \n    .grayout {\n        pointer-events: none;\n        filter: opacity(50%);\n        /*display: none;*/\n    }\n    \n    .error {\n        color: red;\n        font-weight: bold;\n    }\n    \n    .modified {\n        color: #94E3FE;\n    }\n}\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "widget:ui",
        "className": "",
        "x": 140,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "18a4289207877316",
        "type": "ui-template",
        "z": "37a752f35a68bbed",
        "group": "",
        "page": "",
        "ui": "93cf16ef6c7e509b",
        "name": "Disable zoom",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui\">\n",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "widget:ui",
        "className": "",
        "x": 140,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "877ac96f82e21a99",
        "type": "ui-template",
        "z": "37a752f35a68bbed",
        "group": "",
        "page": "",
        "ui": "93cf16ef6c7e509b",
        "name": "Disable text selection",
        "order": 0,
        "width": 0,
        "height": 0,
        "head": "",
        "format": "\n<style>\n    /* Disable text selection across the entire dashboard */\n    body, .nr-dashboard-template, .nr-dashboard-container {\n        user-select: none;\n        -webkit-user-select: none; /* Safari/Chrome */\n        -moz-user-select: none; /* Firefox */\n        -ms-user-select: none; /* Internet Explorer */\n    }\n</style>",
        "storeOutMessages": true,
        "passthru": true,
        "resendOnRefresh": true,
        "templateScope": "widget:ui",
        "className": "",
        "x": 160,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6e318bd0311cf522",
        "type": "inject",
        "z": "37a752f35a68bbed",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Test message",
        "payloadType": "str",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "fceb7b2903eca364"
            ]
        ]
    },
    {
        "id": "4d22e4a2b451ad0b",
        "type": "victron-input-solarcharger",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.solarcharger/289",
        "path": "/Yield/Power",
        "serviceObj": {
            "service": "com.victronenergy.solarcharger/289",
            "name": "SmartSolar Charger MPPT 100/20 48V"
        },
        "pathObj": {
            "path": "/Yield/Power",
            "type": "float",
            "name": "PV Power (W)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "0",
        "x": 240,
        "y": 740,
        "wires": [
            [
                "67f720f7c2ecfe9a",
                "ee95a1b7ce42b63e"
            ]
        ]
    },
    {
        "id": "4349069380bcd671",
        "type": "victron-input-solarcharger",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.solarcharger/289",
        "path": "/Pv/V",
        "serviceObj": {
            "service": "com.victronenergy.solarcharger/289",
            "name": "SmartSolar Charger MPPT 100/20 48V"
        },
        "pathObj": {
            "path": "/Pv/V",
            "type": "float",
            "name": "PV voltage"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 230,
        "y": 840,
        "wires": [
            [
                "d7affa418ab1e611"
            ]
        ]
    },
    {
        "id": "16237dfdc1cca256",
        "type": "victron-input-solarcharger",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.solarcharger/289",
        "path": "/Dc/0/Current",
        "serviceObj": {
            "service": "com.victronenergy.solarcharger/289",
            "name": "Solar Charger"
        },
        "pathObj": {
            "path": "/Dc/0/Current",
            "type": "float",
            "name": "Battery current (A)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "e1a329f6afcd64bd",
                "aab4dc6ba3952dbb"
            ]
        ]
    },
    {
        "id": "c1f210a816af8226",
        "type": "victron-input-solarcharger",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.solarcharger/289",
        "path": "/State",
        "serviceObj": {
            "service": "com.victronenergy.solarcharger/289",
            "name": "Solar Charger"
        },
        "pathObj": {
            "path": "/State",
            "type": "enum",
            "name": "Charge state",
            "enum": {
                "0": "Off",
                "2": "Fault",
                "3": "Bulk",
                "4": "Absorption",
                "5": "Float",
                "6": "Storage",
                "7": "Equalize",
                "245": "Off",
                "247": "Equalize",
                "252": "External Control"
            }
        },
        "initial": "",
        "name": "",
        "onlyChanges": false,
        "roundValues": "3",
        "x": 160,
        "y": 920,
        "wires": [
            [
                "12b4e09b46e4f6dd"
            ]
        ]
    },
    {
        "id": "f1a4e42038e4063d",
        "type": "victron-input-battery",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.battery/289",
        "path": "/Soc",
        "serviceObj": {
            "service": "com.victronenergy.battery/289",
            "name": "Battery"
        },
        "pathObj": {
            "path": "/Soc",
            "type": "float",
            "name": "State of charge (%)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "0",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "26f7cb849699ceef",
                "c9050cd681deef26",
                "9e27bfa8f1afece8",
                "68255a9e7f62d58c"
            ]
        ]
    },
    {
        "id": "f9afb605184c3be9",
        "type": "victron-input-battery",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.battery/289",
        "path": "/Dc/0/Voltage",
        "serviceObj": {
            "service": "com.victronenergy.battery/289",
            "name": "Battery"
        },
        "pathObj": {
            "path": "/Dc/0/Voltage",
            "type": "float",
            "name": "Battery voltage (V)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "756d58821a9d15a1",
                "6a190306423d3c00"
            ]
        ]
    },
    {
        "id": "e63362591c8c6fbb",
        "type": "victron-input-battery",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.battery/289",
        "path": "/Dc/0/Current",
        "serviceObj": {
            "service": "com.victronenergy.battery/289",
            "name": "Battery"
        },
        "pathObj": {
            "path": "/Dc/0/Current",
            "type": "float",
            "name": "Battery current (A)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 150,
        "y": 380,
        "wires": [
            [
                "8b9c506f9132a0c2",
                "5680febb4a7e5edb"
            ]
        ]
    },
    {
        "id": "0310f30d85c0a6e7",
        "type": "victron-input-battery",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.battery/289",
        "path": "/TimeToGo",
        "serviceObj": {
            "service": "com.victronenergy.battery/289",
            "name": "Battery"
        },
        "pathObj": {
            "path": "/TimeToGo",
            "type": "float",
            "name": "Time to go (s)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 140,
        "y": 660,
        "wires": [
            [
                "150b6139a9534c68"
            ]
        ]
    },
    {
        "id": "150b6139a9534c68",
        "type": "function",
        "z": "b22624498baaa896",
        "name": "Sec. to d/h",
        "func": "let totalSeconds = msg.payload;\n\nlet days = Math.floor(totalSeconds / 86400); // 86400 seconds in a day\nlet hours = Math.floor((totalSeconds % 86400) / 3600); // Remaining hours\n\nif (totalSeconds === null ) {\n    msg.payload = `--`;\n}\nelse {\n    msg.payload = `${days} d &nbsp;${hours} h`;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 660,
        "wires": [
            [
                "d8542c08953b4268"
            ]
        ]
    },
    {
        "id": "41d9e01fcc702672",
        "type": "victron-input-battery",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.battery/289",
        "path": "/ConsumedAmphours",
        "serviceObj": {
            "service": "com.victronenergy.battery/289",
            "name": "Battery"
        },
        "pathObj": {
            "path": "/ConsumedAmphours",
            "type": "float",
            "name": "Consumed Amphours (Ah)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 180,
        "y": 600,
        "wires": [
            [
                "62a007a44359cc17"
            ]
        ]
    },
    {
        "id": "6b590f0911fba275",
        "type": "victron-input-solarcharger",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.solarcharger/289",
        "path": "/History/Daily/0/Yield",
        "serviceObj": {
            "service": "com.victronenergy.solarcharger/289",
            "name": "SmartSolar Charger MPPT 100/20 48V"
        },
        "pathObj": {
            "path": "/History/Daily/0/Yield",
            "type": "float",
            "name": "Yield today (kWh)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "3",
        "x": 250,
        "y": 1120,
        "wires": [
            [
                "53a95fb1c4d6126a",
                "0590cfd130b2ea11"
            ]
        ]
    },
    {
        "id": "53a95fb1c4d6126a",
        "type": "function",
        "z": "b22624498baaa896",
        "name": "KWh to Wh",
        "func": "let kwh = msg.payload;\n\nmsg.payload = kwh * 1000;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1120,
        "wires": [
            [
                "26a998da9c67b3d6"
            ]
        ]
    },
    {
        "id": "210d9c2dfb32db9e",
        "type": "link out",
        "z": "b22624498baaa896",
        "name": "Battery level alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 655,
        "y": 160,
        "wires": []
    },
    {
        "id": "26f7cb849699ceef",
        "type": "subflow:26a48bdabf7607df",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmBattLow",
                "type": "str"
            },
            {
                "name": "message",
                "value": "Battery charge",
                "type": "str"
            },
            {
                "name": "unit",
                "value": "%",
                "type": "str"
            }
        ],
        "x": 550,
        "y": 180,
        "wires": [
            [
                "210d9c2dfb32db9e"
            ],
            [
                "55f16741df7ccb35"
            ]
        ]
    },
    {
        "id": "53d71d6f0ddc2d86",
        "type": "victron-input-custom",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.tank/21",
        "path": "/RawValue",
        "serviceObj": {
            "service": "com.victronenergy.tank/21",
            "name": "Propane Tank 1 (21)"
        },
        "pathObj": {
            "path": "/RawValue",
            "name": "/RawValue",
            "type": "number",
            "value": 37.219444274902344
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 170,
        "y": 1200,
        "wires": [
            [
                "a4fe06dad0e33752"
            ]
        ]
    },
    {
        "id": "a4fe06dad0e33752",
        "type": "subflow:c515380878a4716f",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "empty",
                "value": "3.8",
                "type": "num"
            }
        ],
        "x": 500,
        "y": 1200,
        "wires": [
            [
                "56bfe721ed8b5675",
                "e8180cd3ca37e6c5",
                "e08ca67adef7fb8c"
            ]
        ]
    },
    {
        "id": "bcbcc2ea62ba3ecd",
        "type": "subflow:c515380878a4716f",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "empty",
                "value": "3.8",
                "type": "str"
            },
            {
                "name": "full",
                "value": "36.5",
                "type": "str"
            }
        ],
        "x": 560,
        "y": 1380,
        "wires": [
            [
                "b2790ee93b81319a",
                "5624583cb2d689af",
                "5e36b6ecf4020bc5"
            ]
        ]
    },
    {
        "id": "2abf196677a68301",
        "type": "victron-input-custom",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.tank/20",
        "path": "/RawValue",
        "serviceObj": {
            "service": "com.victronenergy.tank/20",
            "name": "Propane Tank 2 (20)"
        },
        "pathObj": {
            "path": "/RawValue",
            "name": "/RawValue",
            "type": "number",
            "value": 4.3295793533325195
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 170,
        "y": 1380,
        "wires": [
            [
                "bcbcc2ea62ba3ecd"
            ]
        ]
    },
    {
        "id": "56bfe721ed8b5675",
        "type": "subflow:26a48bdabf7607df",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmPropaneLow",
                "type": "str"
            },
            {
                "name": "threshold",
                "value": "50",
                "type": "num"
            },
            {
                "name": "message",
                "value": "Left propane tank",
                "type": "str"
            },
            {
                "name": "unit",
                "value": "%",
                "type": "str"
            }
        ],
        "x": 570,
        "y": 1280,
        "wires": [
            [
                "9141f247602e75b7"
            ],
            [
                "e558e37ec5e69804"
            ]
        ]
    },
    {
        "id": "9141f247602e75b7",
        "type": "link out",
        "z": "b22624498baaa896",
        "name": "Propane tank 1 alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 675,
        "y": 1260,
        "wires": []
    },
    {
        "id": "b2790ee93b81319a",
        "type": "subflow:26a48bdabf7607df",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmPropaneLow",
                "type": "str"
            },
            {
                "name": "threshold",
                "value": "50",
                "type": "num"
            },
            {
                "name": "message",
                "value": "Right propane tank",
                "type": "str"
            },
            {
                "name": "unit",
                "value": "%",
                "type": "str"
            }
        ],
        "x": 570,
        "y": 1460,
        "wires": [
            [
                "14753609f7bc5747"
            ],
            [
                "2ae801359341660a"
            ]
        ]
    },
    {
        "id": "14753609f7bc5747",
        "type": "link out",
        "z": "b22624498baaa896",
        "name": "Propane tank 2 alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 675,
        "y": 1440,
        "wires": []
    },
    {
        "id": "bf85fd8b06bfa703",
        "type": "victron-input-temperature",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.tank/21",
        "path": "/Temperature",
        "serviceObj": {
            "service": "com.victronenergy.tank/21",
            "name": "Propane Tank 1"
        },
        "pathObj": {
            "path": "/Temperature",
            "type": "float",
            "name": "Temperature (°C)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 180,
        "y": 1520,
        "wires": [
            [
                "f253ceb24e2d43f6"
            ]
        ]
    },
    {
        "id": "41d09f2e4416a18c",
        "type": "victron-input-temperature",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.tank/20",
        "path": "/Temperature",
        "serviceObj": {
            "service": "com.victronenergy.tank/20",
            "name": "Propane Tank 2"
        },
        "pathObj": {
            "path": "/Temperature",
            "type": "float",
            "name": "Temperature (°C)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 180,
        "y": 1580,
        "wires": [
            [
                "235ba809cc6a36f3"
            ]
        ]
    },
    {
        "id": "c9050cd681deef26",
        "type": "ui-gauge",
        "z": "b22624498baaa896",
        "name": "",
        "group": "a7be90ba6585cc59",
        "order": 1,
        "value": "payload",
        "valueType": "msg",
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "Battery",
        "units": "%",
        "icon": "car-battery",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#e6e600"
            }
        ],
        "min": "0",
        "max": "100",
        "sizeThickness": "12",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "large-gauge-text",
        "x": 920,
        "y": 100,
        "wires": []
    },
    {
        "id": "67f720f7c2ecfe9a",
        "type": "ui-gauge",
        "z": "b22624498baaa896",
        "name": "",
        "group": "a7be90ba6585cc59",
        "order": 2,
        "value": "payload",
        "valueType": "msg",
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "Solar",
        "units": "W",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#e6e600"
            }
        ],
        "min": "0",
        "max": "240",
        "sizeThickness": "12",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "large-gauge-text",
        "x": 910,
        "y": 720,
        "wires": []
    },
    {
        "id": "e8180cd3ca37e6c5",
        "type": "ui-gauge",
        "z": "b22624498baaa896",
        "name": "",
        "group": "25319c4b021b78d9",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "Left",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00c7fc"
            }
        ],
        "min": "0",
        "max": "100",
        "sizeThickness": "12",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "large-gauge-text",
        "x": 910,
        "y": 1200,
        "wires": []
    },
    {
        "id": "5624583cb2d689af",
        "type": "ui-gauge",
        "z": "b22624498baaa896",
        "name": "",
        "group": "25319c4b021b78d9",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "Right",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00c7fc"
            }
        ],
        "min": "0",
        "max": "100",
        "sizeThickness": "12",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "large-gauge-text",
        "x": 910,
        "y": 1380,
        "wires": []
    },
    {
        "id": "316533554384989c",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "16349d9c5c0afd34",
        "order": 2,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Voltage",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 920,
        "y": 300,
        "wires": []
    },
    {
        "id": "756d58821a9d15a1",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 300,
        "wires": [
            [
                "316533554384989c"
            ]
        ]
    },
    {
        "id": "8b9c506f9132a0c2",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "A",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 400,
        "wires": [
            [
                "59622d44c90297d9"
            ]
        ]
    },
    {
        "id": "59622d44c90297d9",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "16349d9c5c0afd34",
        "order": 3,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Current",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 920,
        "y": 400,
        "wires": []
    },
    {
        "id": "62a007a44359cc17",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "Ah",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 600,
        "wires": [
            [
                "5b2bf08ae8ea4253"
            ]
        ]
    },
    {
        "id": "5b2bf08ae8ea4253",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "16349d9c5c0afd34",
        "order": 6,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Consumed Ah",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 940,
        "y": 600,
        "wires": []
    },
    {
        "id": "d8542c08953b4268",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "16349d9c5c0afd34",
        "order": 7,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Time remaining",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 940,
        "y": 660,
        "wires": []
    },
    {
        "id": "d7affa418ab1e611",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 840,
        "wires": [
            [
                "2b9973ea62eb52cc"
            ]
        ]
    },
    {
        "id": "2b9973ea62eb52cc",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "459be61f93594b03",
        "order": 2,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Voltage",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 920,
        "y": 840,
        "wires": []
    },
    {
        "id": "4024d7116f937128",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "459be61f93594b03",
        "order": 5,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "State",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 910,
        "y": 920,
        "wires": []
    },
    {
        "id": "7c7d2a05608cc210",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "459be61f93594b03",
        "order": 3,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Current",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 920,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e1a329f6afcd64bd",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "A",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 1040,
        "wires": [
            [
                "7c7d2a05608cc210"
            ]
        ]
    },
    {
        "id": "944c350128a5e685",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "459be61f93594b03",
        "order": 4,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Yield today",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 930,
        "y": 1140,
        "wires": []
    },
    {
        "id": "26a998da9c67b3d6",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "Wh",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 1140,
        "wires": [
            [
                "944c350128a5e685"
            ]
        ]
    },
    {
        "id": "12b4e09b46e4f6dd",
        "type": "function",
        "z": "b22624498baaa896",
        "name": "TextValue",
        "func": "\nmsg.payload = msg.textvalue;\n\nlet msg2 = {};\n\nmsg2.ui_update = {};\nmsg2.ui_update.units = \"[\" + msg.payload + \"] W\";\n\nreturn [msg2, msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 920,
        "wires": [
            [
                "67f720f7c2ecfe9a"
            ],
            [
                "4024d7116f937128"
            ]
        ]
    },
    {
        "id": "9e27bfa8f1afece8",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "%",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 140,
        "wires": [
            [
                "55f16741df7ccb35"
            ]
        ]
    },
    {
        "id": "55f16741df7ccb35",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "16349d9c5c0afd34",
        "order": 1,
        "width": 12,
        "height": 0,
        "name": "",
        "label": "State of charge",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "large-text",
        "x": 940,
        "y": 140,
        "wires": []
    },
    {
        "id": "8ef640bd94b48c1e",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "459be61f93594b03",
        "order": 1,
        "width": 12,
        "height": 0,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "large-text",
        "x": 910,
        "y": 760,
        "wires": []
    },
    {
        "id": "ee95a1b7ce42b63e",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "W",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 760,
        "wires": [
            [
                "8ef640bd94b48c1e"
            ]
        ]
    },
    {
        "id": "25cea28771461383",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "2e561758ea16e0b5",
        "order": 5,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 930,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f253ceb24e2d43f6",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "x": 790,
        "y": 1520,
        "wires": [
            [
                "25cea28771461383"
            ]
        ]
    },
    {
        "id": "7347d45a575a1686",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "2e561758ea16e0b5",
        "order": 6,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 930,
        "y": 1580,
        "wires": []
    },
    {
        "id": "235ba809cc6a36f3",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "x": 790,
        "y": 1580,
        "wires": [
            [
                "7347d45a575a1686"
            ]
        ]
    },
    {
        "id": "0590cfd130b2ea11",
        "type": "ui-gauge",
        "z": "b22624498baaa896",
        "d": true,
        "name": "",
        "group": "1769e3f51bb550db",
        "order": 1,
        "width": 2,
        "height": 2,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "",
        "units": "kWh",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#e6e600"
            }
        ],
        "min": "0",
        "max": "1.5",
        "sizeThickness": "6",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "small-gauge-text",
        "x": 920,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5680febb4a7e5edb",
        "type": "ui-gauge",
        "z": "b22624498baaa896",
        "name": "",
        "group": "a7be90ba6585cc59",
        "order": 3,
        "value": "payload",
        "valueType": "msg",
        "width": 2,
        "height": 2,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "",
        "units": "A",
        "icon": "car-battery",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "-30",
                "color": "#e6e600"
            }
        ],
        "min": "-30",
        "max": "30",
        "sizeThickness": "6",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "small-gauge-text",
        "x": 920,
        "y": 360,
        "wires": []
    },
    {
        "id": "6a190306423d3c00",
        "type": "ui-gauge",
        "z": "b22624498baaa896",
        "name": "",
        "group": "a7be90ba6585cc59",
        "order": 4,
        "value": "payload",
        "valueType": "msg",
        "width": 2,
        "height": 2,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "",
        "units": "V",
        "icon": "car-battery",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "11",
                "color": "#e6e600"
            }
        ],
        "min": "11",
        "max": "15",
        "sizeThickness": "6",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "small-gauge-text",
        "x": 920,
        "y": 260,
        "wires": []
    },
    {
        "id": "e08ca67adef7fb8c",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "%",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 1240,
        "wires": [
            [
                "e558e37ec5e69804"
            ]
        ]
    },
    {
        "id": "e558e37ec5e69804",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "2e561758ea16e0b5",
        "order": 1,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Left",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "large-text",
        "x": 910,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2ae801359341660a",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "2e561758ea16e0b5",
        "order": 2,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Right",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "large-text",
        "x": 910,
        "y": 1420,
        "wires": []
    },
    {
        "id": "5e36b6ecf4020bc5",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "%",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 1420,
        "wires": [
            [
                "2ae801359341660a"
            ]
        ]
    },
    {
        "id": "96c0d34b5039f94a",
        "type": "victron-input-custom",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.tank/21",
        "path": "/Quality",
        "serviceObj": {
            "service": "com.victronenergy.tank/21",
            "name": "Propane Tank 1 (21)"
        },
        "pathObj": {
            "path": "/Quality",
            "name": "/Quality",
            "type": "number",
            "value": 3
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 160,
        "y": 1660,
        "wires": [
            [
                "9833133c96b19773"
            ]
        ]
    },
    {
        "id": "4b08dd01887b5c29",
        "type": "victron-input-custom",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.tank/20",
        "path": "/Quality",
        "serviceObj": {
            "service": "com.victronenergy.tank/20",
            "name": "Propane Tank 2 (20)"
        },
        "pathObj": {
            "path": "/Quality",
            "name": "/Quality",
            "type": "number",
            "value": 3
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 160,
        "y": 1720,
        "wires": [
            [
                "ee1ddc99836d7c5f"
            ]
        ]
    },
    {
        "id": "e4faba6018cf1503",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "2e561758ea16e0b5",
        "order": 3,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Quality",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 920,
        "y": 1660,
        "wires": []
    },
    {
        "id": "090879cfa55fb504",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "2e561758ea16e0b5",
        "order": 4,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Quality",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 920,
        "y": 1720,
        "wires": []
    },
    {
        "id": "9ba732088185b979",
        "type": "victron-input-custom",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.tank/21",
        "path": "/BatteryVoltage",
        "serviceObj": {
            "service": "com.victronenergy.tank/21",
            "name": "Propane Tank 1 (21)"
        },
        "pathObj": {
            "path": "/BatteryVoltage",
            "name": "/BatteryVoltage",
            "type": "number",
            "value": 2.96875
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 190,
        "y": 1800,
        "wires": [
            [
                "5951f15929c050dc"
            ]
        ]
    },
    {
        "id": "40c7e00220faa9b0",
        "type": "victron-input-custom",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.tank/20",
        "path": "/BatteryVoltage",
        "serviceObj": {
            "service": "com.victronenergy.tank/20",
            "name": "Propane Tank 2 (20)"
        },
        "pathObj": {
            "path": "/BatteryVoltage",
            "name": "/BatteryVoltage",
            "type": "number",
            "value": 3
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 190,
        "y": 1860,
        "wires": [
            [
                "73a635010ccfe4e5"
            ]
        ]
    },
    {
        "id": "5951f15929c050dc",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 1800,
        "wires": [
            [
                "758f57b8a5e519cb"
            ]
        ]
    },
    {
        "id": "758f57b8a5e519cb",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "d": true,
        "group": "1769e3f51bb550db",
        "order": 2,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Battery",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 920,
        "y": 1800,
        "wires": []
    },
    {
        "id": "73a635010ccfe4e5",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 1860,
        "wires": [
            [
                "e5b3a808b0a358fa"
            ]
        ]
    },
    {
        "id": "e5b3a808b0a358fa",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "d": true,
        "group": "1769e3f51bb550db",
        "order": 3,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Battery",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 920,
        "y": 1860,
        "wires": []
    },
    {
        "id": "9833133c96b19773",
        "type": "subflow:1bca7697946c1d3f",
        "z": "b22624498baaa896",
        "name": "",
        "x": 570,
        "y": 1660,
        "wires": [
            [
                "e8180cd3ca37e6c5"
            ],
            [
                "e4faba6018cf1503"
            ]
        ]
    },
    {
        "id": "ee1ddc99836d7c5f",
        "type": "subflow:1bca7697946c1d3f",
        "z": "b22624498baaa896",
        "name": "",
        "x": 570,
        "y": 1720,
        "wires": [
            [
                "5624583cb2d689af"
            ],
            [
                "090879cfa55fb504"
            ]
        ]
    },
    {
        "id": "aab4dc6ba3952dbb",
        "type": "ui-gauge",
        "z": "b22624498baaa896",
        "name": "",
        "group": "a7be90ba6585cc59",
        "order": 5,
        "value": "payload",
        "valueType": "msg",
        "width": 2,
        "height": 2,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "",
        "units": "A",
        "icon": "solar-power",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#e6e600"
            }
        ],
        "min": "0",
        "max": "20",
        "sizeThickness": "6",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "small-gauge-text",
        "x": 920,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a9b632a6e1f88b5e",
        "type": "victron-input-battery",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.battery/289",
        "path": "/Dc/0/Power",
        "serviceObj": {
            "service": "com.victronenergy.battery/289",
            "name": "Battery"
        },
        "pathObj": {
            "path": "/Dc/0/Power",
            "type": "float",
            "name": "Battery power (W)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "1a329e25f08e3184"
            ]
        ]
    },
    {
        "id": "0ec4965cb5cfd307",
        "type": "victron-input-battery",
        "z": "b22624498baaa896",
        "service": "com.victronenergy.battery/289",
        "path": "/Dc/0/Temperature",
        "serviceObj": {
            "service": "com.victronenergy.battery/289",
            "name": "Battery"
        },
        "pathObj": {
            "path": "/Dc/0/Temperature",
            "type": "float",
            "name": "Battery temperature (°C)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "3ebad7ace12dbcc4"
            ]
        ]
    },
    {
        "id": "a4eeb463b73a220b",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "16349d9c5c0afd34",
        "order": 4,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Power",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 910,
        "y": 460,
        "wires": []
    },
    {
        "id": "56caddb3dd587e49",
        "type": "ui-text",
        "z": "b22624498baaa896",
        "group": "16349d9c5c0afd34",
        "order": 5,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 930,
        "y": 520,
        "wires": []
    },
    {
        "id": "1a329e25f08e3184",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "W",
                "type": "str"
            }
        ],
        "x": 790,
        "y": 460,
        "wires": [
            [
                "a4eeb463b73a220b"
            ]
        ]
    },
    {
        "id": "3ebad7ace12dbcc4",
        "type": "subflow:35877746e13a44de",
        "z": "b22624498baaa896",
        "name": "",
        "x": 790,
        "y": 520,
        "wires": [
            [
                "56caddb3dd587e49"
            ]
        ]
    },
    {
        "id": "68255a9e7f62d58c",
        "type": "link out",
        "z": "b22624498baaa896",
        "name": "State of charge",
        "mode": "link",
        "links": [
            "9f6ab86ecfedb8cd"
        ],
        "x": 555,
        "y": 80,
        "wires": []
    },
    {
        "id": "0d95bf949c201846",
        "type": "victron-input-temperature",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.temperature/29",
        "path": "/Temperature",
        "serviceObj": {
            "service": "com.victronenergy.temperature/29",
            "name": "com.victronenergy.temperature/29"
        },
        "pathObj": {
            "path": "/Temperature",
            "type": "float",
            "name": "Temperature (°C)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 240,
        "y": 1500,
        "wires": [
            [
                "efcd52eb9123c4b6"
            ]
        ]
    },
    {
        "id": "1cbbd964a196c7d8",
        "type": "victron-input-temperature",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.temperature/20",
        "path": "/Temperature",
        "serviceObj": {
            "service": "com.victronenergy.temperature/20",
            "name": "Outdoor"
        },
        "pathObj": {
            "path": "/Temperature",
            "type": "float",
            "name": "Temperature (°C)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 150,
        "y": 620,
        "wires": [
            [
                "a852c58b3b285f49"
            ]
        ]
    },
    {
        "id": "e9e6e61455e7859a",
        "type": "victron-input-temperature",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.temperature/20",
        "path": "/Humidity",
        "serviceObj": {
            "service": "com.victronenergy.temperature/20",
            "name": "Outdoor"
        },
        "pathObj": {
            "path": "/Humidity",
            "type": "float",
            "name": "Humidity (%)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 140,
        "y": 720,
        "wires": [
            [
                "5a1c2139256a9b7c"
            ]
        ]
    },
    {
        "id": "03367e769796dea2",
        "type": "victron-input-temperature",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.temperature/21",
        "path": "/Temperature",
        "serviceObj": {
            "service": "com.victronenergy.temperature/21",
            "name": "Fridge"
        },
        "pathObj": {
            "path": "/Temperature",
            "type": "float",
            "name": "Temperature (°C)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "3",
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "3c84ac16a56e8271"
            ]
        ]
    },
    {
        "id": "cefda18b76d95a02",
        "type": "victron-input-battery",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.battery/289",
        "path": "/Dc/0/Temperature",
        "serviceObj": {
            "service": "com.victronenergy.battery/289",
            "name": "Battery"
        },
        "pathObj": {
            "path": "/Dc/0/Temperature",
            "type": "float",
            "name": "Battery temperature (°C)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 170,
        "y": 1660,
        "wires": [
            [
                "ee9a4211b556cacf"
            ]
        ]
    },
    {
        "id": "f46d628d15bf17ce",
        "type": "mqtt in",
        "z": "2561d49b29c858c7",
        "name": "Water temperature",
        "topic": "service/truma/control_status/current_temp_water",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 1340,
        "wires": [
            [
                "7d902834cd76bb07"
            ]
        ]
    },
    {
        "id": "f59d101299f0716e",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "Fridge temp alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 735,
        "y": 1040,
        "wires": []
    },
    {
        "id": "08fe98afcefbc02c",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "Battery temp alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 735,
        "y": 1720,
        "wires": []
    },
    {
        "id": "dfc1f32cb802a02e",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "CPU temp alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 735,
        "y": 1540,
        "wires": []
    },
    {
        "id": "335af24ca01463cb",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "Water temp alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 735,
        "y": 1400,
        "wires": []
    },
    {
        "id": "6296b4c566c5530e",
        "type": "mqtt in",
        "z": "2561d49b29c858c7",
        "name": "Room temperature",
        "topic": "service/truma/control_status/current_temp_room",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "e50497657df013ef"
            ]
        ]
    },
    {
        "id": "e1dd06c5c761e4d9",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "Room temp alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 745,
        "y": 140,
        "wires": []
    },
    {
        "id": "f8c13de4be546aa7",
        "type": "subflow:26a48bdabf7607df",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmTempRoomLow",
                "type": "str"
            },
            {
                "name": "high",
                "value": "alarmTempRoomHigh",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 160,
        "wires": [
            [
                "e1dd06c5c761e4d9"
            ],
            [
                "47fc4a27405d5b1a"
            ]
        ]
    },
    {
        "id": "925f92e5f41b2072",
        "type": "subflow:26a48bdabf7607df",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmTempFridgeLow",
                "type": "str"
            },
            {
                "name": "high",
                "value": "alarmTempFridgeHigh",
                "type": "str"
            },
            {
                "name": "message",
                "value": "Fridge temperature",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 1060,
        "wires": [
            [
                "f59d101299f0716e"
            ],
            [
                "b39fbe0d42a248d4"
            ]
        ]
    },
    {
        "id": "3e0b6cee6fa14daa",
        "type": "subflow:26a48bdabf7607df",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmTempWaterLow",
                "type": "str"
            },
            {
                "name": "threshold",
                "value": "5",
                "type": "num"
            },
            {
                "name": "message",
                "value": "Water temperature",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 1420,
        "wires": [
            [
                "335af24ca01463cb"
            ],
            [
                "b58793209f5ee98a"
            ]
        ]
    },
    {
        "id": "4bd74f30706ccf3c",
        "type": "subflow:26a48bdabf7607df",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "-100",
                "type": "str"
            },
            {
                "name": "high",
                "value": "alarmTempCpuHigh",
                "type": "str"
            },
            {
                "name": "threshold",
                "value": "10",
                "type": "num"
            },
            {
                "name": "message",
                "value": "CPU temperature",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 1560,
        "wires": [
            [
                "dfc1f32cb802a02e"
            ],
            [
                "dd6fe58b20a74178"
            ]
        ]
    },
    {
        "id": "746dd63504103d04",
        "type": "subflow:26a48bdabf7607df",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmTempBattLow",
                "type": "str"
            },
            {
                "name": "high",
                "value": "alarmTempBattHigh",
                "type": "str"
            },
            {
                "name": "message",
                "value": "Battery temperature",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 1740,
        "wires": [
            [
                "08fe98afcefbc02c"
            ],
            [
                "8e2cd2587cdc9e98"
            ]
        ]
    },
    {
        "id": "e50497657df013ef",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "offset",
                "value": "offsetTempRoom",
                "type": "str"
            }
        ],
        "x": 510,
        "y": 100,
        "wires": [
            [
                "f8c13de4be546aa7",
                "6dbdd0e9fbc3fcaa",
                "3e20c20608b3e828",
                "ca728154b5b26204"
            ]
        ]
    },
    {
        "id": "3c84ac16a56e8271",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "offset",
                "value": "offsetTempFridge",
                "type": "str"
            }
        ],
        "x": 510,
        "y": 1000,
        "wires": [
            [
                "925f92e5f41b2072",
                "d8bb06d32cf5b8b5",
                "c02cc7af79521236",
                "8b91c74452c84a68"
            ]
        ]
    },
    {
        "id": "7d902834cd76bb07",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "rounding",
                "value": "0",
                "type": "num"
            }
        ],
        "x": 510,
        "y": 1340,
        "wires": [
            [
                "3e0b6cee6fa14daa",
                "1f345342255566d2",
                "090deb48f0431120"
            ]
        ]
    },
    {
        "id": "efcd52eb9123c4b6",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "x": 510,
        "y": 1500,
        "wires": [
            [
                "4bd74f30706ccf3c",
                "18f5e3ed47b30eba"
            ]
        ]
    },
    {
        "id": "ee9a4211b556cacf",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "rounding",
                "value": "0",
                "type": "num"
            }
        ],
        "x": 510,
        "y": 1660,
        "wires": [
            [
                "746dd63504103d04",
                "b31b2e7127ee128e",
                "4fcf371b5d4733f8"
            ]
        ]
    },
    {
        "id": "fbb485a57854c7ce",
        "type": "victron-input-temperature",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.tank/21",
        "path": "/Temperature",
        "serviceObj": {
            "service": "com.victronenergy.tank/21",
            "name": "Left Propane Tank"
        },
        "pathObj": {
            "path": "/Temperature",
            "type": "float",
            "name": "Temperature (°C)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 180,
        "y": 260,
        "wires": [
            [
                "ed0b389fe13487c0"
            ]
        ]
    },
    {
        "id": "6a1439c4cd40cd39",
        "type": "victron-input-temperature",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.tank/20",
        "path": "/Temperature",
        "serviceObj": {
            "service": "com.victronenergy.tank/20",
            "name": "Right Propane Tank"
        },
        "pathObj": {
            "path": "/Temperature",
            "type": "float",
            "name": "Temperature (°C)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 190,
        "y": 320,
        "wires": [
            [
                "4bbd63596c1f0a25"
            ]
        ]
    },
    {
        "id": "db7e61c450302526",
        "type": "function",
        "z": "2561d49b29c858c7",
        "d": true,
        "name": "Max",
        "func": "\n// Get the stored array or initialize if it doesn't exist\nlet values = context.get('values') || [];\n\n// Add the new payload\nvalues.push(msg.payload);\n\n// Keep only the last 10 values\nif (values.length > 5) {\n    values.shift(); // Remove the oldest value\n}\n\n// Store the updated array back to context\ncontext.set('values', values);\n\n// Find the maximum value\nlet max = Math.max(...values);\n\n// Send the maximum value\nmsg.payload = max;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 300,
        "wires": [
            [
                "1ac7db4665ba096a"
            ]
        ]
    },
    {
        "id": "ed0b389fe13487c0",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "rounding",
                "value": "0",
                "type": "num"
            }
        ],
        "x": 410,
        "y": 260,
        "wires": [
            [
                "db7e61c450302526",
                "243002ab269a2a1c"
            ]
        ]
    },
    {
        "id": "4bbd63596c1f0a25",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "rounding",
                "value": "0",
                "type": "num"
            }
        ],
        "x": 410,
        "y": 320,
        "wires": [
            [
                "db7e61c450302526",
                "7e00fb2cc97bd822"
            ]
        ]
    },
    {
        "id": "a852c58b3b285f49",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "offset",
                "value": "offsetTempOutdoor",
                "type": "str"
            }
        ],
        "x": 510,
        "y": 620,
        "wires": [
            [
                "713b900f566507bd",
                "1ac7db4665ba096a"
            ]
        ]
    },
    {
        "id": "5a1c2139256a9b7c",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "rounding",
                "value": "0",
                "type": "num"
            }
        ],
        "x": 510,
        "y": 720,
        "wires": [
            [
                "8b3cbd29fad5b5e5",
                "211d1220dbbb8e92"
            ]
        ]
    },
    {
        "id": "a39461b4f6e6f09c",
        "type": "victron-input-temperature",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.temperature/21",
        "path": "/Humidity",
        "serviceObj": {
            "service": "com.victronenergy.temperature/21",
            "name": "Fridge"
        },
        "pathObj": {
            "path": "/Humidity",
            "type": "float",
            "name": "Humidity (%)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "32b738159ce24492"
            ]
        ]
    },
    {
        "id": "32b738159ce24492",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "rounding",
                "value": "0",
                "type": "num"
            }
        ],
        "x": 510,
        "y": 1120,
        "wires": [
            [
                "d8d12b2b6d3ac2e1"
            ]
        ]
    },
    {
        "id": "e87c0d6477af1172",
        "type": "victron-input-temperature",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.temperature/20",
        "path": "/Pressure",
        "serviceObj": {
            "service": "com.victronenergy.temperature/20",
            "name": "Outdoor"
        },
        "pathObj": {
            "path": "/Pressure",
            "type": "float",
            "name": "Pressure (kPa)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "1",
        "x": 150,
        "y": 820,
        "wires": [
            [
                "042c33c4332e30d9"
            ]
        ]
    },
    {
        "id": "042c33c4332e30d9",
        "type": "subflow:43e263465d4c8532",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "rounding",
                "value": "0",
                "type": "num"
            }
        ],
        "x": 510,
        "y": 820,
        "wires": [
            [
                "ab551531580504ad"
            ]
        ]
    },
    {
        "id": "6dbdd0e9fbc3fcaa",
        "type": "ui-gauge",
        "z": "2561d49b29c858c7",
        "name": "",
        "group": "2b74e6ea7cedf9dc",
        "order": 1,
        "value": "payload",
        "valueType": "msg",
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "Indoor",
        "units": "°C",
        "icon": "thermometer",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "-10",
                "color": "#00b500"
            },
            {
                "from": "-2.5",
                "color": "#3baf00"
            },
            {
                "from": "2.5",
                "color": "#77a900"
            },
            {
                "from": "7.5",
                "color": "#b2a300"
            },
            {
                "from": "12.5",
                "color": "#e6e600"
            },
            {
                "from": "17.5",
                "color": "#e0b900"
            },
            {
                "from": "22.5",
                "color": "#da8c00"
            },
            {
                "from": "27.5",
                "color": "#d45f1f"
            },
            {
                "from": "32.5",
                "color": "#ca3838"
            }
        ],
        "min": "-10",
        "max": "40",
        "sizeThickness": "12",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "large-gauge-text",
        "x": 950,
        "y": 80,
        "wires": []
    },
    {
        "id": "47fc4a27405d5b1a",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "f38228eceb5426aa",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Room temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 990,
        "y": 120,
        "wires": []
    },
    {
        "id": "b39fbe0d42a248d4",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "f38228eceb5426aa",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fridge temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 990,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3e20c20608b3e828",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "x": 810,
        "y": 120,
        "wires": [
            [
                "47fc4a27405d5b1a"
            ]
        ]
    },
    {
        "id": "d8bb06d32cf5b8b5",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "x": 810,
        "y": 1020,
        "wires": [
            [
                "b39fbe0d42a248d4"
            ]
        ]
    },
    {
        "id": "243002ab269a2a1c",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "x": 810,
        "y": 260,
        "wires": [
            [
                "c6fef6a98ae25101"
            ]
        ]
    },
    {
        "id": "7e00fb2cc97bd822",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "x": 810,
        "y": 320,
        "wires": [
            [
                "a0c22a37e1e606c5"
            ]
        ]
    },
    {
        "id": "c6fef6a98ae25101",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "64aefdbb4f4733ee",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Left propane tank temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1010,
        "y": 260,
        "wires": []
    },
    {
        "id": "a0c22a37e1e606c5",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "64aefdbb4f4733ee",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Right propane tank temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1010,
        "y": 320,
        "wires": []
    },
    {
        "id": "24871667c32d50e2",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "64aefdbb4f4733ee",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Center temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 990,
        "y": 620,
        "wires": []
    },
    {
        "id": "713b900f566507bd",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "x": 810,
        "y": 620,
        "wires": [
            [
                "24871667c32d50e2"
            ]
        ]
    },
    {
        "id": "291c20af2a14a174",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "64aefdbb4f4733ee",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Relative humidity",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 990,
        "y": 740,
        "wires": []
    },
    {
        "id": "8b3cbd29fad5b5e5",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "%",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 740,
        "wires": [
            [
                "291c20af2a14a174"
            ]
        ]
    },
    {
        "id": "802c34362f2c4162",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "64aefdbb4f4733ee",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Atmospheric pressure",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1000,
        "y": 800,
        "wires": []
    },
    {
        "id": "ab551531580504ad",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "kPa",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 800,
        "wires": [
            [
                "802c34362f2c4162"
            ]
        ]
    },
    {
        "id": "1db71ef6c0dd3b89",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "f38228eceb5426aa",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fridge humidity",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 980,
        "y": 1120,
        "wires": []
    },
    {
        "id": "d8d12b2b6d3ac2e1",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "%",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 1120,
        "wires": [
            [
                "1db71ef6c0dd3b89"
            ]
        ]
    },
    {
        "id": "1f345342255566d2",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "x": 810,
        "y": 1360,
        "wires": [
            [
                "b58793209f5ee98a"
            ]
        ]
    },
    {
        "id": "b58793209f5ee98a",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "f38228eceb5426aa",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Water temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 990,
        "y": 1360,
        "wires": []
    },
    {
        "id": "18f5e3ed47b30eba",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "x": 810,
        "y": 1500,
        "wires": [
            [
                "dd6fe58b20a74178"
            ]
        ]
    },
    {
        "id": "dd6fe58b20a74178",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "f38228eceb5426aa",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "CPU temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 990,
        "y": 1500,
        "wires": []
    },
    {
        "id": "b31b2e7127ee128e",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "x": 810,
        "y": 1680,
        "wires": [
            [
                "8e2cd2587cdc9e98"
            ]
        ]
    },
    {
        "id": "8e2cd2587cdc9e98",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "f38228eceb5426aa",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Battery temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1000,
        "y": 1680,
        "wires": []
    },
    {
        "id": "1ac7db4665ba096a",
        "type": "ui-gauge",
        "z": "2561d49b29c858c7",
        "name": "",
        "group": "2b74e6ea7cedf9dc",
        "order": 3,
        "value": "payload",
        "valueType": "msg",
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "Outdoor",
        "units": "°C",
        "icon": "thermometer",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "-10",
                "color": "#00b500"
            },
            {
                "from": "-7.5",
                "color": "#19a507"
            },
            {
                "from": "2.5",
                "color": "#32950e"
            },
            {
                "from": "7.5",
                "color": "#b2a300"
            },
            {
                "from": "12.5",
                "color": "#e6e600"
            },
            {
                "from": "17.5",
                "color": "#e0b900"
            },
            {
                "from": "22.5",
                "color": "#da8c00"
            },
            {
                "from": "27.5",
                "color": "#d45f1f"
            },
            {
                "from": "32.5",
                "color": "#ca3838"
            }
        ],
        "min": "-10",
        "max": "40",
        "sizeThickness": "12",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "large-gauge-text",
        "x": 960,
        "y": 580,
        "wires": []
    },
    {
        "id": "c02cc7af79521236",
        "type": "ui-gauge",
        "z": "2561d49b29c858c7",
        "name": "",
        "group": "2b74e6ea7cedf9dc",
        "order": 2,
        "value": "payload",
        "valueType": "msg",
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "Fridge",
        "units": "°C",
        "icon": "thermometer",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "-10",
                "color": "#00b500"
            },
            {
                "from": "-7.5",
                "color": "#19a507"
            },
            {
                "from": "2.5",
                "color": "#32950e"
            },
            {
                "from": "7.5",
                "color": "#b2a300"
            },
            {
                "from": "12.5",
                "color": "#e6e600"
            },
            {
                "from": "17.5",
                "color": "#e0b900"
            },
            {
                "from": "22.5",
                "color": "#da8c00"
            },
            {
                "from": "27.5",
                "color": "#d45f1f"
            },
            {
                "from": "32.5",
                "color": "#ca3838"
            }
        ],
        "min": "-10",
        "max": "40",
        "sizeThickness": "12",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "large-gauge-text",
        "x": 950,
        "y": 980,
        "wires": []
    },
    {
        "id": "4fcf371b5d4733f8",
        "type": "ui-gauge",
        "z": "2561d49b29c858c7",
        "d": true,
        "name": "",
        "group": "1769e3f51bb550db",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "Battery",
        "units": "°C",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "-10",
                "color": "#00b500"
            },
            {
                "from": "-7.5",
                "color": "#19a507"
            },
            {
                "from": "2.5",
                "color": "#32950e"
            },
            {
                "from": "7.5",
                "color": "#b2a300"
            },
            {
                "from": "12.5",
                "color": "#e6e600"
            },
            {
                "from": "17.5",
                "color": "#e0b900"
            },
            {
                "from": "22.5",
                "color": "#da8c00"
            },
            {
                "from": "27.5",
                "color": "#d45f1f"
            },
            {
                "from": "32.5",
                "color": "#ca3838"
            }
        ],
        "min": "-10",
        "max": "40",
        "sizeThickness": "12",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "large-gauge-text",
        "x": 960,
        "y": 1640,
        "wires": []
    },
    {
        "id": "211d1220dbbb8e92",
        "type": "ui-gauge",
        "z": "2561d49b29c858c7",
        "d": true,
        "name": "",
        "group": "1769e3f51bb550db",
        "order": 6,
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "Outdoor RH",
        "units": "%",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#00b500"
            },
            {
                "from": "15",
                "color": "#19a507"
            },
            {
                "from": "25",
                "color": "#32950e"
            },
            {
                "from": "35",
                "color": "#b2a300"
            },
            {
                "from": "45",
                "color": "#e6e600"
            },
            {
                "from": "55",
                "color": "#e0b900"
            },
            {
                "from": "65",
                "color": "#da8c00"
            },
            {
                "from": "75",
                "color": "#d45f1f"
            },
            {
                "from": "85",
                "color": "#ca3838"
            }
        ],
        "min": "0",
        "max": "100",
        "sizeThickness": "12",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "large-gauge-text",
        "x": 970,
        "y": 700,
        "wires": []
    },
    {
        "id": "7f2ebc86f161bdfa",
        "type": "victron-input-temperature",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.temperature/21",
        "path": "/BatteryVoltage",
        "serviceObj": {
            "service": "com.victronenergy.temperature/21",
            "name": "Fridge"
        },
        "pathObj": {
            "path": "/BatteryVoltage",
            "type": "float",
            "name": "Sensor battery voltage (V)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 180,
        "y": 1220,
        "wires": [
            [
                "21036f8750650e45",
                "5b123744a3e0fc78"
            ]
        ]
    },
    {
        "id": "e40cf8f912e64c7c",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "ba0d9a414ff3a20d",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fridge sensor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 980,
        "y": 1220,
        "wires": []
    },
    {
        "id": "21036f8750650e45",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 1220,
        "wires": [
            [
                "e40cf8f912e64c7c"
            ]
        ]
    },
    {
        "id": "a7d85432789574b6",
        "type": "victron-input-temperature",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.temperature/20",
        "path": "/BatteryVoltage",
        "serviceObj": {
            "service": "com.victronenergy.temperature/20",
            "name": "Outdoor"
        },
        "pathObj": {
            "path": "/BatteryVoltage",
            "type": "float",
            "name": "Sensor battery voltage (V)"
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 180,
        "y": 880,
        "wires": [
            [
                "0f975df191703924",
                "d621075a310392c0"
            ]
        ]
    },
    {
        "id": "29a1859ee6666879",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "ba0d9a414ff3a20d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Outdoor sensor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 980,
        "y": 880,
        "wires": []
    },
    {
        "id": "0f975df191703924",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 880,
        "wires": [
            [
                "29a1859ee6666879"
            ]
        ]
    },
    {
        "id": "47dc45ca632d40ff",
        "type": "victron-input-custom",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.tank/21",
        "path": "/BatteryVoltage",
        "serviceObj": {
            "service": "com.victronenergy.tank/21",
            "name": "Propane Tank 1 (21)"
        },
        "pathObj": {
            "path": "/BatteryVoltage",
            "name": "/BatteryVoltage",
            "type": "number",
            "value": 2.96875
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "e6e4d04c2eda2cd9",
                "c14086bf468a46fc"
            ]
        ]
    },
    {
        "id": "99f27aacc1a80525",
        "type": "victron-input-custom",
        "z": "2561d49b29c858c7",
        "service": "com.victronenergy.tank/20",
        "path": "/BatteryVoltage",
        "serviceObj": {
            "service": "com.victronenergy.tank/20",
            "name": "Propane Tank 2 (20)"
        },
        "pathObj": {
            "path": "/BatteryVoltage",
            "name": "/BatteryVoltage",
            "type": "number",
            "value": 3
        },
        "name": "",
        "onlyChanges": false,
        "roundValues": "2",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "66f6ef672a39ed80",
                "e58706be9dad540d"
            ]
        ]
    },
    {
        "id": "e6e4d04c2eda2cd9",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 420,
        "wires": [
            [
                "c02faeb59985c2fa"
            ]
        ]
    },
    {
        "id": "c02faeb59985c2fa",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "ba0d9a414ff3a20d",
        "order": 1,
        "width": "0",
        "height": 0,
        "name": "",
        "label": "Left propane tank",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 990,
        "y": 420,
        "wires": []
    },
    {
        "id": "66f6ef672a39ed80",
        "type": "subflow:35877746e13a44de",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 810,
        "y": 500,
        "wires": [
            [
                "ae45e91d9bfb6e25"
            ]
        ]
    },
    {
        "id": "ae45e91d9bfb6e25",
        "type": "ui-text",
        "z": "2561d49b29c858c7",
        "group": "ba0d9a414ff3a20d",
        "order": 2,
        "width": "0",
        "height": 0,
        "name": "",
        "label": "Right propane tank",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 990,
        "y": 500,
        "wires": []
    },
    {
        "id": "090deb48f0431120",
        "type": "ui-gauge",
        "z": "2561d49b29c858c7",
        "name": "",
        "group": "2b74e6ea7cedf9dc",
        "order": 4,
        "value": "payload",
        "valueType": "msg",
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "Water",
        "units": "°C",
        "icon": "thermometer",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "-10",
                "color": "#00b500"
            },
            {
                "from": "-7.5",
                "color": "#19a507"
            },
            {
                "from": "2.5",
                "color": "#32950e"
            },
            {
                "from": "7.5",
                "color": "#b2a300"
            },
            {
                "from": "12.5",
                "color": "#e6e600"
            },
            {
                "from": "17.5",
                "color": "#e0b900"
            },
            {
                "from": "22.5",
                "color": "#da8c00"
            },
            {
                "from": "27.5",
                "color": "#d45f1f"
            },
            {
                "from": "32.5",
                "color": "#ca3838"
            }
        ],
        "min": "-10",
        "max": "60",
        "sizeThickness": "12",
        "sizeGap": "0",
        "sizeKeyThickness": "0",
        "styleRounded": true,
        "styleGlow": false,
        "className": "large-gauge-text",
        "x": 950,
        "y": 1320,
        "wires": []
    },
    {
        "id": "ca728154b5b26204",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "Room temperature",
        "mode": "link",
        "links": [
            "d892337cb1c8691c",
            "bd479a673f65a239"
        ],
        "x": 705,
        "y": 60,
        "wires": []
    },
    {
        "id": "8b91c74452c84a68",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "Fridge temperature",
        "mode": "link",
        "links": [
            "ba5bc53644e7417d",
            "380565adfd0e025a"
        ],
        "x": 705,
        "y": 960,
        "wires": []
    },
    {
        "id": "5b123744a3e0fc78",
        "type": "subflow:26a48bdabf7607df",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmSensorBatt",
                "type": "str"
            },
            {
                "name": "threshold",
                "value": "0.2",
                "type": "num"
            },
            {
                "name": "message",
                "value": "Fridge sensor battery",
                "type": "str"
            },
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 1260,
        "wires": [
            [
                "c9f48f0fd15a2481"
            ],
            [
                "e40cf8f912e64c7c"
            ]
        ]
    },
    {
        "id": "c9f48f0fd15a2481",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "Fridge sensor battery alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 735,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d621075a310392c0",
        "type": "subflow:26a48bdabf7607df",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmSensorBatt",
                "type": "str"
            },
            {
                "name": "threshold",
                "value": "0.2",
                "type": "num"
            },
            {
                "name": "message",
                "value": "Outdoor sensor battery",
                "type": "str"
            },
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 650,
        "y": 920,
        "wires": [
            [
                "30ec2d30d9a6c151"
            ],
            [
                "29a1859ee6666879"
            ]
        ]
    },
    {
        "id": "30ec2d30d9a6c151",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "Outdoor temp alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 735,
        "y": 900,
        "wires": []
    },
    {
        "id": "e58706be9dad540d",
        "type": "subflow:26a48bdabf7607df",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmSensorBatt",
                "type": "str"
            },
            {
                "name": "threshold",
                "value": "0.2",
                "type": "num"
            },
            {
                "name": "message",
                "value": "Right propane sensor battery",
                "type": "str"
            },
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 630,
        "y": 540,
        "wires": [
            [
                "eb62a9a32e858911"
            ],
            [
                "ae45e91d9bfb6e25"
            ]
        ]
    },
    {
        "id": "eb62a9a32e858911",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "Propane 2 battery alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 725,
        "y": 520,
        "wires": []
    },
    {
        "id": "c14086bf468a46fc",
        "type": "subflow:26a48bdabf7607df",
        "z": "2561d49b29c858c7",
        "name": "",
        "env": [
            {
                "name": "low",
                "value": "alarmSensorBatt",
                "type": "str"
            },
            {
                "name": "threshold",
                "value": "0.2",
                "type": "num"
            },
            {
                "name": "message",
                "value": "Left propane sensor battery",
                "type": "str"
            },
            {
                "name": "unit",
                "value": "V",
                "type": "str"
            }
        ],
        "x": 630,
        "y": 460,
        "wires": [
            [
                "55ed9207847adf8d"
            ],
            [
                "c02faeb59985c2fa"
            ]
        ]
    },
    {
        "id": "55ed9207847adf8d",
        "type": "link out",
        "z": "2561d49b29c858c7",
        "name": "Propane 1 battery alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 725,
        "y": 440,
        "wires": []
    },
    {
        "id": "e797340e231f7c0d",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "EnergySelect",
        "func": "\n// Define the lookup table\nconst lookupTable = {\n    \"gas\":       { value1: \"gas\",         value2: 0    },\n    \"electric1\": { value1: \"electricity\", value2: 900  },\n    \"electric2\": { value1: \"electricity\", value2: 1800 },\n    \"mix1\":      { value1: \"mix\",         value2: 900  },\n    \"mix2\":      { value1: \"mix\",         value2: 1800 }\n};\n\n// Get the input value (e.g., from msg.payload)\nlet inputValue = msg.payload;\n\n// Check the lookup table and get the results\nlet result = lookupTable[inputValue] || { value1: \"gas\", value2: 0 };\n\n// Prepare two different messages\nlet msg1 = { payload: result.value1, topic: 'mix' };  // Message for the first output\nlet msg2 = { payload: result.value2, topic: 'mix' };  // Message for the second output\n\n// Return both messages to different outputs\nreturn [msg1, msg2];  // Sends msg1 to output 1, and msg2 to output 2\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 740,
        "wires": [
            [
                "fe6f1dbf2c0b0a80"
            ],
            [
                "118396f3190fdecb"
            ]
        ]
    },
    {
        "id": "b95d223c430a2047",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "SetFan",
        "func": "if (msg.payload === undefined) {\n    return null;\n}\n\nflow.set('fan', msg.payload);\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "4ec59e63f4ab1d7d",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "HeatingTrigger",
        "func": "\nif (msg.payload === undefined) {\n    return null;\n}\n\nlet temp = msg.payload;\n\nif (temp !== 0) {\n    \n    let fan      = flow.get('fan') || 'eco';\n    let lastTemp = context.get('last_temp') || 0;\n    \n    context.set('last_temp', temp);\n\n    // Prepare two different messages\n    let msg1 = { payload: temp, topic: 'temp' };\n    let msg2 = { payload: fan,  topic: 'fan' };\n    \n    if (lastTemp === 0) {\n        return [msg1, msg2];\n    }\n    else {\n        return [msg1, null];\n    }\n\n}\nelse {\n    context.set('last_temp', 0);\n    \n    let msg1 = { payload: 0,     topic: 'temp' }\n    let msg2 = { payload: 'off', topic: 'fan' };\n    return [msg1, msg2];\n}\n    \n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 80,
        "wires": [
            [
                "7565051f69b6a443",
                "e0a363c704a9509a"
            ],
            [
                "5b3b355a63ca805e"
            ]
        ]
    },
    {
        "id": "57ddf5b217a8f13c",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "EnergyCombine",
        "func": "\n// Define the same lookup table\nconst lookupTable = {\n    \"gas\":       { value1: \"gas\",         value2: 0    },\n    \"electric1\": { value1: \"electricity\", value2: 900  },\n    \"electric2\": { value1: \"electricity\", value2: 1800 },\n    \"mix1\":      { value1: \"mix\",         value2: 900  },\n    \"mix2\":      { value1: \"mix\",         value2: 1800 }\n};\n\n\nif (msg.topic.includes('energy_mix')) {\n    context.set('energy_mix', msg.payload);\n}\nelse if (msg.topic.includes('el_power_level')) {\n    context.set('el_power', msg.payload);\n}\n\nlet value1 = context.get('energy_mix');\nlet value2 = context.get('el_power');\n\n// Perform reverse lookup\nlet foundKey = null;\nfor (let key in lookupTable) {\n    let entry = lookupTable[key];\n    if (entry.value1 === value1 && entry.value2 === value2) {\n        foundKey = key;\n        break;\n    }\n}\n\n// Return the key as payload (or a fallback if not found)\nmsg.payload = foundKey || 'unknown';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 740,
        "wires": [
            [
                "ef835c0120eecc9d"
            ]
        ]
    },
    {
        "id": "102150e9c523f055",
        "type": "mqtt out",
        "z": "c74d4096e08fa272",
        "name": "Temperature",
        "topic": "service/truma/set/target_temp_room",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2c24d1c82633c69e",
        "x": 1110,
        "y": 280,
        "wires": []
    },
    {
        "id": "159bf7d233075a2b",
        "type": "mqtt out",
        "z": "c74d4096e08fa272",
        "name": "Fan setting",
        "topic": "service/truma/set/heating_mode",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2c24d1c82633c69e",
        "x": 1110,
        "y": 440,
        "wires": []
    },
    {
        "id": "2c6234848be3af9e",
        "type": "mqtt out",
        "z": "c74d4096e08fa272",
        "name": "Water temperature",
        "topic": "service/truma/set/target_temp_water",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2c24d1c82633c69e",
        "x": 1130,
        "y": 580,
        "wires": []
    },
    {
        "id": "fe6f1dbf2c0b0a80",
        "type": "mqtt out",
        "z": "c74d4096e08fa272",
        "name": "Energy mix",
        "topic": "service/truma/set/energy_mix",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2c24d1c82633c69e",
        "x": 1110,
        "y": 700,
        "wires": []
    },
    {
        "id": "118396f3190fdecb",
        "type": "mqtt out",
        "z": "c74d4096e08fa272",
        "name": "El. power",
        "topic": "service/truma/set/el_power_level",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "2c24d1c82633c69e",
        "x": 1100,
        "y": 760,
        "wires": []
    },
    {
        "id": "743d4152f8e67158",
        "type": "mqtt in",
        "z": "c74d4096e08fa272",
        "name": "Temperature",
        "topic": "service/truma/control_status/target_temp_room",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 280,
        "wires": [
            [
                "7565051f69b6a443"
            ]
        ]
    },
    {
        "id": "c748715438fabfcd",
        "type": "mqtt in",
        "z": "c74d4096e08fa272",
        "name": "Fan setting",
        "topic": "service/truma/control_status/heating_mode",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 440,
        "wires": [
            [
                "5b3b355a63ca805e"
            ]
        ]
    },
    {
        "id": "a9ea96f0e1ddded5",
        "type": "mqtt in",
        "z": "c74d4096e08fa272",
        "name": "Water temperature",
        "topic": "service/truma/control_status/target_temp_water",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 580,
        "wires": [
            [
                "375b24ad920e78fd"
            ]
        ]
    },
    {
        "id": "2b1463bd1d674f3e",
        "type": "mqtt in",
        "z": "c74d4096e08fa272",
        "name": "Energy mix",
        "topic": "service/truma/control_status/energy_mix",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 700,
        "wires": [
            [
                "57ddf5b217a8f13c"
            ]
        ]
    },
    {
        "id": "44c84c6c152ac72e",
        "type": "mqtt in",
        "z": "c74d4096e08fa272",
        "name": "El. power",
        "topic": "service/truma/control_status/el_power_level",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 760,
        "wires": [
            [
                "57ddf5b217a8f13c"
            ]
        ]
    },
    {
        "id": "49463f2823ece9ff",
        "type": "mqtt in",
        "z": "c74d4096e08fa272",
        "name": "Room temperature",
        "topic": "service/truma/control_status/current_temp_room",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 900,
        "wires": [
            [
                "c01e702147b1614d"
            ]
        ]
    },
    {
        "id": "ab8c68e6c951999f",
        "type": "mqtt in",
        "z": "c74d4096e08fa272",
        "name": "Water temperature",
        "topic": "service/truma/control_status/current_temp_water",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 960,
        "wires": [
            [
                "d446f36fb24aad67"
            ]
        ]
    },
    {
        "id": "a3546477d33a8a89",
        "type": "mqtt in",
        "z": "c74d4096e08fa272",
        "name": "Error code",
        "topic": "service/truma/control_status/error_code",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 1080,
        "wires": [
            [
                "aeeecafd3aba5913"
            ]
        ]
    },
    {
        "id": "eeb94ec5ffdea417",
        "type": "mqtt in",
        "z": "c74d4096e08fa272",
        "name": "Connection status",
        "topic": "service/truma/control_status/alive",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "2c24d1c82633c69e",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 1020,
        "wires": [
            [
                "aeeecafd3aba5913"
            ]
        ]
    },
    {
        "id": "60b4291ab1bc4195",
        "type": "link out",
        "z": "c74d4096e08fa272",
        "name": "Truma alarm",
        "mode": "link",
        "links": [
            "2f93affb367a865e"
        ],
        "x": 745,
        "y": 1100,
        "wires": []
    },
    {
        "id": "aeeecafd3aba5913",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "DecodeError",
        "func": "\nlet status = { payload: '', ui_update: {class: ''} };\n\nif (msg.topic.includes('alive')) {\n    if (msg.payload !== 'ON') {\n        status.payload = 'Connection lost!';\n        status.ui_update.class = 'error';\n    }\n    else {\n        lastStatus = context.get('lastStatus');\n        if (lastStatus === undefined) {\n            status.payload = 'OK';\n        }\n        else {\n            status = lastStatus;\n        }\n    }\n    \n    return status;\n}\n\nelse {\n    \n    switch (+msg.payload) {\n        \n        case 0:\n            status.payload = 'OK';\n            break;\n            \n        case 7:\n            status.payload = '230 V disconnect!';\n            status.ui_update.class = 'error';\n            break;\n        \n        case 8:\n            status.payload = 'Gas interrupted!';  // In mix mode\n            status.ui_update.class = 'error';\n            break;\n        \n        case 17:\n            status.payload = 'Gas interrupted!';\n            status.ui_update.class = 'error';\n            break;\n            \n        default:\n            status.payload = 'Error code: ' + msg.payload;\n            status.ui_update.class = 'error';\n            break;\n    }\n\n    context.set('lastStatus', status);\n    \n    return status;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1020,
        "wires": [
            [
                "3764559c61d5efd8",
                "975147e68669abdf",
                "2cb60131ed577e2e"
            ]
        ]
    },
    {
        "id": "7565051f69b6a443",
        "type": "subflow:2b1e3a255c9f7549",
        "z": "c74d4096e08fa272",
        "name": "",
        "x": 670,
        "y": 280,
        "wires": [
            [
                "1ffa61af8057c317",
                "89f945b670c00a5d",
                "813ff97549cc920b"
            ],
            [
                "102150e9c523f055"
            ]
        ]
    },
    {
        "id": "5b3b355a63ca805e",
        "type": "subflow:2b1e3a255c9f7549",
        "z": "c74d4096e08fa272",
        "name": "",
        "env": [
            {
                "name": "topic",
                "value": "fan",
                "type": "str"
            }
        ],
        "x": 670,
        "y": 440,
        "wires": [
            [
                "4a65ed61376cb495",
                "756961715ead8e49"
            ],
            [
                "159bf7d233075a2b"
            ]
        ]
    },
    {
        "id": "375b24ad920e78fd",
        "type": "subflow:2b1e3a255c9f7549",
        "z": "c74d4096e08fa272",
        "name": "",
        "env": [
            {
                "name": "topic",
                "value": "water",
                "type": "str"
            }
        ],
        "x": 670,
        "y": 580,
        "wires": [
            [
                "b016a634d4ca03b4",
                "824ddf9f659fc93b"
            ],
            [
                "2c6234848be3af9e"
            ]
        ]
    },
    {
        "id": "ef835c0120eecc9d",
        "type": "subflow:2b1e3a255c9f7549",
        "z": "c74d4096e08fa272",
        "name": "",
        "env": [
            {
                "name": "topic",
                "value": "mix",
                "type": "str"
            }
        ],
        "x": 670,
        "y": 740,
        "wires": [
            [
                "78b0cde417cbf16d",
                "aa6a9dec4558a20b"
            ],
            [
                "e797340e231f7c0d"
            ]
        ]
    },
    {
        "id": "4a65ed61376cb495",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "Filter",
        "func": "\nif (msg.payload === 'off') {\n    msg.payload = flow.get('fan');\n}\n\nlet grayout = flow.get('grayout1') || false;\n\nif (msg.ui_update != undefined && grayout) {\n    return null;\n} \n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "b95d223c430a2047",
                "2bb0230acd2f9d87"
            ]
        ]
    },
    {
        "id": "1ffa61af8057c317",
        "type": "ui-dropdown",
        "z": "c74d4096e08fa272",
        "group": "df7a1670ae765f1d",
        "name": "",
        "label": "Temp",
        "tooltip": "",
        "order": 2,
        "width": 3,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 0,
                "type": "num"
            },
            {
                "label": "5 °C",
                "value": 5,
                "type": "num"
            },
            {
                "label": "6 °C",
                "value": 6,
                "type": "num"
            },
            {
                "label": "7 °C",
                "value": 7,
                "type": "num"
            },
            {
                "label": "8 °C",
                "value": 8,
                "type": "num"
            },
            {
                "label": "9 °C",
                "value": 9,
                "type": "num"
            },
            {
                "label": "10 °C",
                "value": 10,
                "type": "num"
            },
            {
                "label": "11 °C",
                "value": 11,
                "type": "num"
            },
            {
                "label": "12 °C",
                "value": 12,
                "type": "num"
            },
            {
                "label": "13 °C",
                "value": 13,
                "type": "num"
            },
            {
                "label": "14 °C",
                "value": 14,
                "type": "num"
            },
            {
                "label": "15 °C",
                "value": 15,
                "type": "num"
            },
            {
                "label": "16 °C",
                "value": 16,
                "type": "num"
            },
            {
                "label": "17 °C",
                "value": 17,
                "type": "num"
            },
            {
                "label": "18 °C",
                "value": 18,
                "type": "num"
            },
            {
                "label": "19 °C",
                "value": 19,
                "type": "num"
            },
            {
                "label": "20 °C",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21 °C",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22 °C",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23 °C",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24 °C",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25 °C",
                "value": 25,
                "type": "num"
            },
            {
                "label": "26 °C",
                "value": 26,
                "type": "num"
            },
            {
                "label": "27 °C",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28 °C",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29 °C",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30 °C",
                "value": 30,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "temp",
        "topicType": "str",
        "className": "temp-target",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 650,
        "y": 220,
        "wires": [
            [
                "4ec59e63f4ab1d7d"
            ]
        ]
    },
    {
        "id": "2bb0230acd2f9d87",
        "type": "ui-dropdown",
        "z": "c74d4096e08fa272",
        "group": "df7a1670ae765f1d",
        "name": "",
        "label": "Fan",
        "tooltip": "",
        "order": 4,
        "width": 3,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "ECO",
                "value": "eco",
                "type": "str"
            },
            {
                "label": "HIGH",
                "value": "high",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "fan",
        "topicType": "str",
        "className": "fan-target",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 650,
        "y": 360,
        "wires": [
            [
                "b95d223c430a2047",
                "5b3b355a63ca805e"
            ]
        ]
    },
    {
        "id": "b016a634d4ca03b4",
        "type": "ui-dropdown",
        "z": "c74d4096e08fa272",
        "group": "df7a1670ae765f1d",
        "name": "",
        "label": "Water",
        "tooltip": "",
        "order": 6,
        "width": 3,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 0,
                "type": "num"
            },
            {
                "label": "ECO",
                "value": 40,
                "type": "num"
            },
            {
                "label": "HOT",
                "value": 60,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "water",
        "topicType": "str",
        "className": "water-target",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 650,
        "y": 520,
        "wires": [
            [
                "375b24ad920e78fd",
                "e0a363c704a9509a"
            ]
        ]
    },
    {
        "id": "b95c020a30b25ac7",
        "type": "ui-dropdown",
        "z": "c74d4096e08fa272",
        "group": "df7a1670ae765f1d",
        "name": "",
        "label": "Energy",
        "tooltip": "",
        "order": 8,
        "width": 3,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "Gas",
                "value": "gas",
                "type": "str"
            },
            {
                "label": "Electric 1",
                "value": "electric1",
                "type": "str"
            },
            {
                "label": "Electric 2",
                "value": "electric2",
                "type": "str"
            },
            {
                "label": "Mix 1",
                "value": "mix1",
                "type": "str"
            },
            {
                "label": "Mix 2",
                "value": "mix2",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "mix",
        "topicType": "str",
        "className": "mix-target",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 650,
        "y": 680,
        "wires": [
            [
                "ef835c0120eecc9d"
            ]
        ]
    },
    {
        "id": "e0a363c704a9509a",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "Grayout",
        "func": "\nif (msg.topic === 'temp') {\n    context.set('temp', msg.payload);\n}\nelse if (msg.topic === 'water') {\n    context.set('water', msg.payload);\n}\n\nlet temp  = context.get('temp') || 0;\nlet water = context.get('water') || 0; \n\nlet msg1 = {};\nlet msg2 = {};\nmsg1.ui_update = {};\nmsg2.ui_update = {};\n\nif (temp === 0) {\n    flow.set('grayout1', true);\n    msg1.ui_update.class = 'grayout';\n}\nelse {\n    flow.set('grayout1', false);\n    msg1.ui_update.class = '';\n}\n\nif (temp === 0 && water === 0) {\n    flow.set('grayout2', true);\n    msg2.ui_update.class = 'grayout';\n}\nelse {\n    flow.set('grayout2', false);\n    msg2.ui_update.class = '';\n}\n\n\nreturn [msg1, msg2];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 60,
        "wires": [
            [
                "2bb0230acd2f9d87"
            ],
            [
                "b95c020a30b25ac7"
            ]
        ]
    },
    {
        "id": "63d1dd30192b029b",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "fc3c351e5707cb90",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Room temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 790,
        "y": 900,
        "wires": []
    },
    {
        "id": "c01e702147b1614d",
        "type": "subflow:35877746e13a44de",
        "z": "c74d4096e08fa272",
        "name": "",
        "x": 630,
        "y": 900,
        "wires": [
            [
                "63d1dd30192b029b"
            ]
        ]
    },
    {
        "id": "d446f36fb24aad67",
        "type": "subflow:35877746e13a44de",
        "z": "c74d4096e08fa272",
        "name": "",
        "x": 630,
        "y": 960,
        "wires": [
            [
                "26bdfed08c4592ed"
            ]
        ]
    },
    {
        "id": "26bdfed08c4592ed",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "fc3c351e5707cb90",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Water temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 790,
        "y": 960,
        "wires": []
    },
    {
        "id": "3764559c61d5efd8",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "fc3c351e5707cb90",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "System status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 780,
        "y": 1020,
        "wires": []
    },
    {
        "id": "78b0cde417cbf16d",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "Filter",
        "func": "\nlet grayout = flow.get('grayout2') || false;\n\nif (msg.ui_update != undefined && grayout) {\n    return null;\n} \n\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 680,
        "wires": [
            [
                "b95c020a30b25ac7"
            ]
        ]
    },
    {
        "id": "ff6e07d23603fe1d",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "df7a1670ae765f1d",
        "order": 1,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 410,
        "y": 220,
        "wires": []
    },
    {
        "id": "8ea58dfdb532db74",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "df7a1670ae765f1d",
        "order": 3,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Fan setting",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 410,
        "y": 320,
        "wires": []
    },
    {
        "id": "ca359b51012b4ef3",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "df7a1670ae765f1d",
        "order": 5,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Water temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 410,
        "y": 520,
        "wires": []
    },
    {
        "id": "1d2f95d0ebe50bb9",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "df7a1670ae765f1d",
        "order": 7,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Energy mix",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 410,
        "y": 620,
        "wires": []
    },
    {
        "id": "122d78cd25de6ab7",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "bc614f1d5f7543e9",
        "order": 1,
        "width": 3,
        "height": "",
        "name": "",
        "label": "Temperature",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1110,
        "y": 220,
        "wires": []
    },
    {
        "id": "1051011b6e1ad9a5",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "bc614f1d5f7543e9",
        "order": 3,
        "width": 3,
        "height": null,
        "name": "",
        "label": "Fan setting",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1110,
        "y": 360,
        "wires": []
    },
    {
        "id": "f2d33c43bccfd098",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "bc614f1d5f7543e9",
        "order": 2,
        "width": 3,
        "height": "",
        "name": "",
        "label": "Water temp",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1110,
        "y": 540,
        "wires": []
    },
    {
        "id": "65bbd489473ffc87",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "bc614f1d5f7543e9",
        "order": 4,
        "width": 3,
        "height": null,
        "name": "",
        "label": "Energy mix",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1110,
        "y": 660,
        "wires": []
    },
    {
        "id": "975147e68669abdf",
        "type": "ui-text",
        "z": "c74d4096e08fa272",
        "group": "bc614f1d5f7543e9",
        "order": 5,
        "width": null,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 750,
        "y": 1060,
        "wires": []
    },
    {
        "id": "89f945b670c00a5d",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "Decode",
        "func": "if (msg.payload === undefined) {\n    return null;\n}\n\nswitch (msg.payload) {\n    case 0:\n        msg.payload = 'OFF';\n        break;\n    \n    default:\n        msg.payload = msg.payload + ' °C';\n        break;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 220,
        "wires": [
            [
                "122d78cd25de6ab7"
            ]
        ]
    },
    {
        "id": "756961715ead8e49",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "Decode",
        "func": "if (msg.payload === undefined) {\n    return null;\n}\n\nmsg.payload = msg.payload.toUpperCase();\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 360,
        "wires": [
            [
                "1051011b6e1ad9a5"
            ]
        ]
    },
    {
        "id": "824ddf9f659fc93b",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "Decode",
        "func": "if (msg.payload === undefined) {\n    return null;\n}\n\n\nswitch (msg.payload) {\n    case 0:\n        msg.payload = 'OFF';\n        break;\n        \n    case 40:\n        msg.payload = 'ECO';\n        break;\n        \n    case 60:\n        msg.payload = 'HOT';\n        break;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 540,
        "wires": [
            [
                "f2d33c43bccfd098"
            ]
        ]
    },
    {
        "id": "aa6a9dec4558a20b",
        "type": "function",
        "z": "c74d4096e08fa272",
        "name": "Decode",
        "func": "if (msg.payload === undefined) {\n    return null;\n}\n\nswitch (msg.payload) {\n    case 'gas':\n        msg.payload = 'Gas';\n        break;\n        \n    case 'electric1':\n        msg.payload = 'Electric 1';\n        break;\n        \n    case 'electric2':\n        msg.payload = 'Electric 2';\n        break;\n    \n    case 'mix1':\n        msg.payload = 'Mix 1';\n        break;\n        \n    case 'mix2':\n        msg.payload = 'Mix 2';\n        break;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 660,
        "wires": [
            [
                "65bbd489473ffc87"
            ]
        ]
    },
    {
        "id": "813ff97549cc920b",
        "type": "subflow:04a8d6feb3e5bdc7",
        "z": "c74d4096e08fa272",
        "name": "",
        "env": [
            {
                "name": "topic",
                "value": "temp",
                "type": "str"
            }
        ],
        "x": 870,
        "y": 260,
        "wires": [
            [
                "e0a363c704a9509a"
            ]
        ]
    },
    {
        "id": "2cb60131ed577e2e",
        "type": "subflow:1230e5122b3b7f25",
        "z": "c74d4096e08fa272",
        "name": "",
        "x": 630,
        "y": 1100,
        "wires": [
            [
                "60b4291ab1bc4195"
            ]
        ]
    },
    {
        "id": "d892337cb1c8691c",
        "type": "link in",
        "z": "fcffa944a0680a42",
        "name": "Room temperature",
        "links": [
            "ca728154b5b26204"
        ],
        "x": 605,
        "y": 720,
        "wires": [
            [
                "84fee1c01cb4c300"
            ]
        ]
    },
    {
        "id": "ba5bc53644e7417d",
        "type": "link in",
        "z": "fcffa944a0680a42",
        "name": "Fridge temperature",
        "links": [
            "8b91c74452c84a68"
        ],
        "x": 605,
        "y": 680,
        "wires": [
            [
                "01379f4d90d7d2c1"
            ]
        ]
    },
    {
        "id": "2f50a3396f8d9a61",
        "type": "exec",
        "z": "fcffa944a0680a42",
        "command": "/opt/nastia-server/bin/serial-command",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "720",
        "winHide": false,
        "oldrc": false,
        "name": "Write UART",
        "x": 270,
        "y": 680,
        "wires": [
            [
                "cf563ccf97436424"
            ],
            [],
            [
                "86470d03d9a70f6b",
                "9015a4834ff0024c"
            ]
        ]
    },
    {
        "id": "c204bef87b041596",
        "type": "debug",
        "z": "fcffa944a0680a42",
        "name": "Command",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 380,
        "wires": []
    },
    {
        "id": "168961b78425eb48",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "0a055cab4c53c810",
        "order": 1,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Compressor",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 210,
        "y": 120,
        "wires": []
    },
    {
        "id": "360e8acd62618140",
        "type": "ui-dropdown",
        "z": "fcffa944a0680a42",
        "group": "0a055cab4c53c810",
        "name": "",
        "label": "Temp",
        "tooltip": "",
        "order": 2,
        "width": 3,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 0,
                "type": "num"
            },
            {
                "label": "1 °C",
                "value": 1,
                "type": "num"
            },
            {
                "label": "1.5 °C",
                "value": "1.5",
                "type": "str"
            },
            {
                "label": "2 °C",
                "value": 2,
                "type": "num"
            },
            {
                "label": "2.5 °C",
                "value": 2.5,
                "type": "num"
            },
            {
                "label": "3 °C",
                "value": 3,
                "type": "num"
            },
            {
                "label": "3.5 °C",
                "value": 3.5,
                "type": "num"
            },
            {
                "label": "4 °C",
                "value": 4,
                "type": "num"
            },
            {
                "label": "4.5 °C",
                "value": 4.5,
                "type": "num"
            },
            {
                "label": "5 °C",
                "value": 5,
                "type": "num"
            },
            {
                "label": "5.5 °C",
                "value": 5.5,
                "type": "num"
            },
            {
                "label": "6 °C",
                "value": 6,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "fridgeTargetTemp",
        "topicType": "str",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 650,
        "y": 120,
        "wires": [
            [
                "a8702dfa02f03390",
                "e4af2af2d2beb8aa",
                "236fdb56f87224ab"
            ]
        ]
    },
    {
        "id": "649c370c245facc1",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "9ce95c5084b7683e",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Compressor duty cycle",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 950,
        "y": 760,
        "wires": []
    },
    {
        "id": "23c3aa52142db6ea",
        "type": "subflow:35877746e13a44de",
        "z": "fcffa944a0680a42",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "%",
                "type": "str"
            }
        ],
        "x": 770,
        "y": 760,
        "wires": [
            [
                "649c370c245facc1",
                "3492fefa9a608e51"
            ]
        ]
    },
    {
        "id": "8459ff2385d2a8b6",
        "type": "function",
        "z": "fcffa944a0680a42",
        "name": "DecodeJSON",
        "func": "\nlet json = msg.payload;\n\nlet msg1 = {};\nlet msg2 = {};\nlet msg3 = {};\n\nlet minPwm = 190;\nlet maxPwm = 75;\nlet minRpm = 2000;\nlet maxRpm = 3000\n\nif (json.ok != 30) return;\n\nfunction map (value, inMin, inMax, outMin, outMax) {\n    return (value - inMin) * (outMax - outMin) / (inMax - inMin) + outMin\n}\n\nmsg1.payload = json.dutyCycle;\n\nmsg2.payload = json.outputPwm;\n\npwm = json.outputPwm;\nif (pwm > 0) {\n    speed = map(pwm, minPwm, maxPwm, minRpm, maxRpm);\n    msg2.payload = +(+speed).toFixed(0);\n}\nelse {\n   msg2.payload = 0 ;\n}\n\nswitch (json.defrost) {\n    case 0:\n    case -1:\n        msg3.payload = \"OFF\";\n        break;\n    case 1:\n        msg3.payload = \"ON\";\n        break;\n    case 2:\n        msg3.payload = \"WAIT\";\n        break;\n}\n\nreturn [msg1, msg2, msg3];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 800,
        "wires": [
            [
                "23c3aa52142db6ea"
            ],
            [
                "e0575167fd853f01"
            ],
            [
                "7dd29f98636a2aa9",
                "7cde7e874d36ebed"
            ]
        ]
    },
    {
        "id": "56a433e018671cd7",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "9ce95c5084b7683e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Compressor speed",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 930,
        "y": 800,
        "wires": []
    },
    {
        "id": "7dd29f98636a2aa9",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "9ce95c5084b7683e",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Defrost cycle",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 910,
        "y": 840,
        "wires": []
    },
    {
        "id": "e0575167fd853f01",
        "type": "subflow:35877746e13a44de",
        "z": "fcffa944a0680a42",
        "name": "",
        "env": [
            {
                "name": "unit",
                "value": "RPM",
                "type": "str"
            }
        ],
        "x": 770,
        "y": 800,
        "wires": [
            [
                "56a433e018671cd7",
                "5c280ce2d1e0dc24"
            ]
        ]
    },
    {
        "id": "5f5d5081c07c41cb",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "9ce95c5084b7683e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Room temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 930,
        "y": 720,
        "wires": []
    },
    {
        "id": "7452a256cab10eb5",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "9ce95c5084b7683e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fridge temperature",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 930,
        "y": 680,
        "wires": []
    },
    {
        "id": "01379f4d90d7d2c1",
        "type": "subflow:35877746e13a44de",
        "z": "fcffa944a0680a42",
        "name": "",
        "x": 770,
        "y": 680,
        "wires": [
            [
                "7452a256cab10eb5"
            ]
        ]
    },
    {
        "id": "84fee1c01cb4c300",
        "type": "subflow:35877746e13a44de",
        "z": "fcffa944a0680a42",
        "name": "",
        "x": 770,
        "y": 720,
        "wires": [
            [
                "5f5d5081c07c41cb"
            ]
        ]
    },
    {
        "id": "380565adfd0e025a",
        "type": "link in",
        "z": "fcffa944a0680a42",
        "name": "Fridge temperature",
        "links": [
            "8b91c74452c84a68"
        ],
        "x": 155,
        "y": 320,
        "wires": [
            [
                "27d9a5edb0ba97a5"
            ]
        ]
    },
    {
        "id": "a8702dfa02f03390",
        "type": "function",
        "z": "fcffa944a0680a42",
        "name": "ControlLoop",
        "func": "\n// Settings\nconst lowBattSoC       = global.get(\"fridgeLowBattSoC\");       // Low battery detection state of charge in %\nconst boostTemp        = global.get(\"fridgeBoostTemp\");        // Temp threshold for activating the gas boost function\nconst boostHyst        = global.get(\"fridgeBoostHyst\");        // Temp reduction for deactivating the gas boost function\nconst defrostMaxTemp   = global.get(\"fridgeDefrostMaxTemp\");   // Temp threshold for deaactivating the defrost cycle\nconst defrostTempDec   = global.get(\"fridgeDefrostTempDec\");   // Decrease target temp by this amout when preparing for a defrost cycle\nconst openDoorTempRate = global.get(\"fridgeOpenDoorTempRate\"); // Fridge temp increase rate per trigger interval to raise an open door alarm\nconst openDoorTempInc  = global.get(\"fridgeOpenDoorTempInc\");  // Absolute fridge temp increase to raise an open door alarm\nconst freezerInstalled = global.get(\"fridgeFreezerInstalled\"); // Freezer compartment has been installed\n\n\nlet now = Date.now();\nlet cmd = {};\nlet sensorStatus = {topic: \"sensor\", payload: true};\nlet battStatus   = {topic: \"battery\", payload: true};\nlet boostStatus  = {topic: \"boost\",};\n\n// Store received values\nif (msg.topic === \"fridgeTargetTemp\") {\n    context.set(\"target\", msg.payload);\n}\nelse if (msg.topic === \"fridgeAbsorberMode\") {\n    context.set(\"absorberMode\", msg.payload);\n    // Ensure that boost is not deactivated if settings are reloaded from file\n    if (context.get(\"boostActive\")) {\n        node.send([null, null, {payload: 0}]);   // Set absorber mode to 0\n    }\n    else {\n        node.send([null, null, {payload: msg.payload}]);  // Forward absorber mode\n    }\n}\nelse if (msg.topic === \"fridgeAbsorberModeUser\") {\n    context.set(\"absorberMode\", msg.payload);\n    if (context.get(\"boostActive\")) {\n        node.log(\"Boost disabled by user\");\n        boostStatus.payload = false;\n        node.send([null, boostStatus, null]);    \n    }\n    node.send([null, null, {payload: msg.payload}]);  // Forward absorber mode\n}\nelse if (msg.topic === \"fridge\") {\n    context.set(\"fridge\", msg.raw);\n    context.set(\"lastTime\", now);\n}\nelse if (msg.topic === \"room\") {\n    context.set(\"room\", msg.payload);\n}\nelse if (msg.topic === \"battery\") {\n    context.set(\"battery\", msg.payload);\n}\nelse if (msg.topic === \"jsonConfig\") {\n    context.set(\"ok\", msg.payload.ok);\n    if (msg.payload.ok === 30) {\n        context.set(\"sysStatus\", msg.payload);\n    }\n}\nelse if (msg.topic === \"return\") {\n    context.set(\"return\", msg.payload.code);\n}\n\n// Proceed only if trigger was received\nif (msg.topic != \"trigger\") {\n    return null;\n}\n\n\n// Read state variables\nlet target    = context.get(\"target\");\nlet absMode   = context.get(\"absorberMode\") || 0;\nlet fridge    = context.get(\"fridge\");\nlet room      = context.get(\"room\");\nlet sysStatus = context.get(\"sysStatus\") || {};\nlet battery   = context.get(\"battery\");\nlet lastTemp  = context.get(\"lastTemp\");\nlet lastTime  = context.get(\"lastTime\") || 0;\nlet nextCmd   = context.get(\"nextCmd\");\nlet msgSent   = context.get(\"msgSent\") || false;\nlet count     = context.get(\"count\") || 0;\nlet lastCmd   = context.get(\"lastCmd\");\n\n\n// Confirm successful command transmission\nif (lastCmd) {\n    let code = context.get(\"return\");\n    let ok   = context.get(\"ok\");\n    context.set(\"return\", undefined);\n    context.set(\"ok\", undefined);\n    if (code === 0) {\n        if (lastCmd.payload === `\"c ${ok}\"`) {\n            //node.warn(`Success: ${lastCmd.payload}`);\n            context.set(\"lastCmd\", undefined);\n            context.set(\"lastWarn\", undefined);\n        }\n        else {\n            warn = `Retransmit: ${lastCmd.payload} (ok = ${ok})`\n            // Avoid similar traces\n            if (warn != context.get(\"lastWarn\")) {\n                context.set(\"lastWarn\", warn);\n                node.warn(warn);\n            }\n            return [lastCmd, null, null];\n        }\n    }\n    else if (code != undefined) {\n        warn = `Retransmit: ${lastCmd.payload} (code = ${code})`\n        // Avoid similar traces\n        if (warn != context.get(\"lastWarn\")) {\n            context.set(\"lastWarn\", warn);\n            node.warn(warn);\n        }\n        return [lastCmd, null, null];\n    }\n    else {\n        context.set(\"lastWarn\", undefined);\n        return null;\n    }\n}\n\n\n// Temperature sensor failure detection\nif (now - lastTime > 60000 || fridge === undefined) {\n    sensorStatus.payload = false;\n    fridge = undefined;\n}\n\n\n// Temperature increase rate calculation\nif (count % 3 === 0 || fridge < lastTemp || lastTemp === undefined) {\n  context.set(\"lastTemp\", fridge);\n}\nlet delta = fridge - lastTemp;\n//node.warn(`fridge=${fridge}, lastTemp=${lastTemp}, delta=${delta}, nextCmd=${nextCmd}`);\n\n// Open door / temperature surge detection\nif (((delta > openDoorTempRate && fridge > target) || (fridge > target + openDoorTempInc && target != 0)) && !context.get(\"wasOpenDr\") && nextCmd === undefined) {\n    node.log(`Temperature surge: delta = ${delta.toFixed(3)}, fridge = ${fridge.toFixed(3)}`);\n    nextCmd = \"\\\"c 20\\\"\";                // Disable defrost\n    context.set(\"nextCmd\", \"\\\"c 10\\\"\");  // Set max speed\n    context.set(\"wasOpenDr\", true);\n}\nelse if (fridge < target) {\n    context.set(\"wasOpenDr\", false);\n}\n\n\n// Disable defrost at high room temperatures\nif (room > defrostMaxTemp && sysStatus.defrost === 1 && nextCmd === undefined) {\n    node.log(`Cancelling defrost: room = ${room}`);\n    nextCmd = \"\\\"c 20\\\"\";   // Disable defrost\n    sysStatus.defrost = 0;\n    context.set(\"sysStatus\", sysStatus);\n}\n\n\n// Detect defrost state race condition\nif (sysStatus.defrost === 0) {\n    context.set(\"lastDefrost\", 0);\n}\nelse if (context.get(\"lastDefrost\") === 0) {\n    // Race condition - sequence must be 0 -> 2 -> 1\n    if (sysStatus.defrost === 1 && nextCmd === undefined) {\n        node.log(\"Restarting defrost for pre-cool\");\n        nextCmd = \"\\\"c 20\\\"\";               // Disable defrost\n        context.set(\"nextCmd\", \"\\\"c 21\\\"\"); // Reenable defrost\n        sysStatus.defrost = 0;\n        context.set(\"sysStatus\", sysStatus);\n    }\n    else if (sysStatus.defrost === 2) {\n        context.set(\"lastDefrost\", 2);\n    }\n}\n\n\n// Pre-cool before starting a defrost cycle\nif (sysStatus.defrost === 2 && room <= defrostMaxTemp && target >= 1) {\n    target = target - defrostTempDec;\n}\n\n// Low battery detection and gas boost activation\nlet lowBatt = (battery < lowBattSoC);\nlet boost   = context.get(\"boost\") || false;\nif (room >= boostTemp && !boost) {\n    boost = true;\n    context.set(\"boost\", boost);\n}\nelse if (room < boostTemp - boostHyst && boost) {\n    boost = false;\n    context.set(\"boost\", boost);\n}\nif (lowBatt || boost) {\n    if (lowBatt) {\n        battStatus.payload = false;\n    }\n    if (!context.get(\"boostActive\")) {\n        node.log(`Boost enabled: lowBatt = ${lowBatt}, boost = ${boost}`);\n        context.set(\"boostActive\", true);\n        boostStatus.payload = true;\n        let mode = {\"payload\": 0};  // Switch to gas mode\n        node.send([null, boostStatus, mode]);\n    }\n}\nelse {\n    if (context.get(\"boostActive\")) {\n        node.log(\"Boost disabled\");\n        context.set(\"boostActive\", false);\n        boostStatus.payload = false;\n        let mode = {\"payload\": absMode};  // Recover previous mode\n        node.send([null, boostStatus, mode]);\n    }\n}\n\n\n// Deactivate periodic defrost if freezer compartment has been installed\nif (freezerInstalled && sysStatus.defrost != -1) {\n    nextCmd = \"\\\"c 22\\\"\";  // Deactivate defrost feature\n    sysStatus.defrost = -1;\n    context.set(\"sysStatus\", sysStatus);\n}\nelse if (!freezerInstalled && sysStatus.defrost === -1) {\n    nextCmd = \"\\\"c 23\\\"\";  // Activate defrost feature\n    sysStatus.defrost = 0;\n    context.set(\"sysStatus\", sysStatus);\n}\n\n\n// Manage event counter\nlet statusEvent = false;\nlet pingEvent   = false;\nif (count % 2 === 0) {\n    statusEvent = true;\n}\nelse if (count % 5 === 0) {\n    pingEvent = true;\n}\ncount++;\ncontext.set(\"count\", count);\n\n\n// Request system status by default\ncmd.payload = \"\\\"c 30\\\"\";\n\n\n// Request system status\nif (statusEvent && nextCmd === undefined) {\n    cmd.payload = \"\\\"c 30\\\"\";  // Request system status\n}\n// Execute scheduled command\nelse if (nextCmd != undefined) {\n    if (nextCmd === context.get(\"nextCmd\")) {\n        context.set(\"nextCmd\", undefined);\n    }\n    cmd.payload = nextCmd;\n}\n// Temperature sensor failure detection\nelse if (sensorStatus.payload === false) {\n    //node.log(\"Temperature sensor no signal\");\n    // Don't send command\n}\n// Low battery detection\nelse if (battStatus.payload === false) {\n    if (sysStatus.inputEnabled === 1 || pingEvent) {\n        node.log(`Low battery shutdown: battery = ${battery}`);\n        cmd.payload = \"\\\"c 0\\\"\";   // Turn off the compressor\n    }\n}\n// Turn off\nelse if (target === 0) {\n    if (sysStatus.inputEnabled === 1 || pingEvent) {\n        cmd.payload = \"\\\"c 0\\\"\";   // Turn off the compressor\n    }\n}\n// Start\nelse if (fridge > target) {\n    if (sysStatus.inputEnabled === 0 || pingEvent) {\n        cmd.payload = \"\\\"c 11\\\"\";  // Turn on the compressor\n    }\n}\n// Stop\nelse {\n    if (sysStatus.inputEnabled === 1 || pingEvent) {\n        cmd.payload = \"\\\"c 0\\\"\";   // Turn off the compressor\n    }\n    \n}\n\nnode.send([null, battStatus, null]);\nnode.send([null, sensorStatus, null]);\n\n// Filter logs\nif (cmd.payload != \"\\\"c 30\\\"\" && cmd.payload != context.get(\"lastLogCmd\")) {\n    context.set(\"lastLogCmd\", cmd.payload);\n    node.log(`Sent: ${cmd.payload}`);\n}\n\ncontext.set(\"lastCmd\", cmd);\nreturn [cmd, null, null];\n\n\n\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 300,
        "wires": [
            [
                "c204bef87b041596",
                "7e05e1eaee6f9375"
            ],
            [
                "e4cff028ee24380b"
            ],
            [
                "1c66410a4fffbe9b",
                "4d642db5f04a62ce",
                "c48aa761d863d1ea"
            ]
        ]
    },
    {
        "id": "c6ccc1f3791c5861",
        "type": "inject",
        "z": "fcffa944a0680a42",
        "name": "Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "trigger",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 220,
        "wires": [
            [
                "a8702dfa02f03390"
            ]
        ]
    },
    {
        "id": "d5196d0babadee3e",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "9ce95c5084b7683e",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "System status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 920,
        "y": 880,
        "wires": []
    },
    {
        "id": "8697d6c29f673249",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "576d8789f70030f1",
        "order": 1,
        "width": 3,
        "height": "",
        "name": "",
        "label": "Compressor",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1090,
        "y": 80,
        "wires": []
    },
    {
        "id": "3492fefa9a608e51",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "576d8789f70030f1",
        "order": 3,
        "width": 3,
        "height": "",
        "name": "",
        "label": "Duty cycle",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1170,
        "y": 760,
        "wires": []
    },
    {
        "id": "5c280ce2d1e0dc24",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "576d8789f70030f1",
        "order": 4,
        "width": 3,
        "height": "",
        "name": "",
        "label": "Speed",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1150,
        "y": 800,
        "wires": []
    },
    {
        "id": "7cde7e874d36ebed",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "d": true,
        "group": "1769e3f51bb550db",
        "order": 5,
        "width": 3,
        "height": "",
        "name": "",
        "label": "Defrost",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1160,
        "y": 840,
        "wires": []
    },
    {
        "id": "32c0ad4d04501f99",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "576d8789f70030f1",
        "order": 5,
        "width": 6,
        "height": "",
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1150,
        "y": 880,
        "wires": []
    },
    {
        "id": "e4cff028ee24380b",
        "type": "function",
        "z": "fcffa944a0680a42",
        "name": "DecodeError",
        "func": "\nlet json    = context.get(\"json\") || false;\nlet sensor  = context.get(\"sensor\") || false;\nlet battery = context.get(\"battery\") || false;\nlet boost   = context.get(\"boost\") || false;\nlet discCnt = context.get(\"discCnt\") || 0;\nlet status  = {\"ui_update\": {\"class\": \"\"}};\n\n//node.warn(`topic=${msg.topic}, payload=${msg.payload}`);\n\nif (msg.topic === \"json\") {\n    if (msg.payload === false) {\n        discCnt++;\n    }\n    else {\n        discCnt = 0;\n    }\n    context.set(\"discCnt\", discCnt);\n    if (discCnt >= 3) {\n        json = false;\n    }\n    else {\n        json = true;\n    }\n    context.set(\"json\", json);\n}\nelse if (msg.topic === \"sensor\") {\n    context.set(\"sensor\", msg.payload);\n}\nelse if (msg.topic === \"battery\") {\n    context.set(\"battery\", msg.payload);\n}\nelse if (msg.topic === \"boost\") {\n    context.set(\"boost\", msg.payload);\n}\n\n//node.warn(`json=${json}, sensor=${sensor}`);\n\nif (!sensor) {\n    status.payload = \"Sensor error!\";\n    status.ui_update.class = \"error\";\n}\nelse if (!json) {\n    status.payload = \"Connection lost!\";\n    status.ui_update.class = \"error\";\n}\nelse if (!battery) {\n    status.payload = \"Low battery!\";\n    status.ui_update.class = \"error\";\n}\nelse if (boost) {\n    status.payload = \"BOOST\";\n}\nelse {\n    status.payload = \"OK\"; \n}\nreturn status;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 880,
        "wires": [
            [
                "d5196d0babadee3e",
                "32c0ad4d04501f99",
                "262c7576d0bcdc93"
            ]
        ]
    },
    {
        "id": "e4af2af2d2beb8aa",
        "type": "function",
        "z": "fcffa944a0680a42",
        "name": "Decode",
        "func": "if (msg.payload === undefined) {\n    return null;\n}\n\nswitch (msg.payload) {\n    case 0:\n        msg.payload = 'OFF';\n        break;\n    \n    default:\n        msg.payload = msg.payload + ' °C';\n        break;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 80,
        "wires": [
            [
                "8697d6c29f673249"
            ]
        ]
    },
    {
        "id": "9f6ab86ecfedb8cd",
        "type": "link in",
        "z": "fcffa944a0680a42",
        "name": "State of charge",
        "links": [
            "68255a9e7f62d58c"
        ],
        "x": 155,
        "y": 400,
        "wires": [
            [
                "c3c2a02d311239d0"
            ]
        ]
    },
    {
        "id": "bd479a673f65a239",
        "type": "link in",
        "z": "fcffa944a0680a42",
        "name": "Room temperature",
        "links": [
            "ca728154b5b26204"
        ],
        "x": 155,
        "y": 360,
        "wires": [
            [
                "e2ea3fae15ab213f"
            ]
        ]
    },
    {
        "id": "86470d03d9a70f6b",
        "type": "debug",
        "z": "fcffa944a0680a42",
        "name": "Return",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 540,
        "wires": []
    },
    {
        "id": "cf563ccf97436424",
        "type": "subflow:c37eefbf57ce59ee",
        "z": "fcffa944a0680a42",
        "name": "",
        "x": 330,
        "y": 820,
        "wires": [
            [
                "a8702dfa02f03390",
                "8459ff2385d2a8b6",
                "fb2e28811fcc6756"
            ],
            [
                "e4cff028ee24380b"
            ]
        ]
    },
    {
        "id": "1c66410a4fffbe9b",
        "type": "ui-dropdown",
        "z": "fcffa944a0680a42",
        "group": "0a055cab4c53c810",
        "name": "",
        "label": "Source",
        "tooltip": "",
        "order": 4,
        "width": 3,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "Gas",
                "value": 0,
                "type": "num"
            },
            {
                "label": "12 V",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "fridgeAbsorberMode",
        "topicType": "str",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "236fdb56f87224ab",
                "6c08b2d473d2ced1"
            ]
        ]
    },
    {
        "id": "519dc53bd28a09aa",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "0a055cab4c53c810",
        "order": 3,
        "width": 3,
        "height": 0,
        "name": "",
        "label": "Absorber",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 200,
        "y": 160,
        "wires": []
    },
    {
        "id": "952f932b5a1e9973",
        "type": "ui-text",
        "z": "fcffa944a0680a42",
        "group": "576d8789f70030f1",
        "order": 2,
        "width": 3,
        "height": "",
        "name": "",
        "label": "Absorber",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 1080,
        "y": 120,
        "wires": []
    },
    {
        "id": "4d642db5f04a62ce",
        "type": "function",
        "z": "fcffa944a0680a42",
        "name": "Decode",
        "func": "if (msg.payload === undefined) {\n    return null;\n}\n\nswitch (msg.payload) {\n    case 0:\n        msg.payload = \"Gas\";\n        break;\n    \n    case 1:\n        msg.payload = \"12 V\";\n        break;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 120,
        "wires": [
            [
                "952f932b5a1e9973"
            ]
        ]
    },
    {
        "id": "797f9429f69e9626",
        "type": "file",
        "z": "fcffa944a0680a42",
        "name": "Write GPIO",
        "filename": "/tmp/gpio-out",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1070,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c48aa761d863d1ea",
        "type": "function",
        "z": "fcffa944a0680a42",
        "name": "Encode",
        "func": "\n\nlet gpioPin = env.get(\"fridge-gpio-pin\");\nlet out = {};\n\nout.payload = `${gpioPin} ${msg.payload}`\n\nreturn out;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 260,
        "wires": [
            [
                "797f9429f69e9626"
            ]
        ]
    },
    {
        "id": "0ffbdf4fdf3d401d",
        "type": "link in",
        "z": "fcffa944a0680a42",
        "name": "Fridge absorber mode",
        "links": [
            "5516c054e1990d91",
            "3d85942573ccab81",
            "bd3005bcf8f17047",
            "85d2d64baaa1534a"
        ],
        "x": 365,
        "y": 160,
        "wires": [
            [
                "a8702dfa02f03390",
                "236fdb56f87224ab"
            ]
        ]
    },
    {
        "id": "236fdb56f87224ab",
        "type": "link out",
        "z": "fcffa944a0680a42",
        "name": "Settings",
        "mode": "link",
        "links": [
            "ef7f15d0f953b171"
        ],
        "x": 855,
        "y": 160,
        "wires": []
    },
    {
        "id": "b8de84a1a12a151c",
        "type": "link in",
        "z": "fcffa944a0680a42",
        "name": "Fridge target temp",
        "links": [
            "a31fc4d8f53ef9df"
        ],
        "x": 365,
        "y": 120,
        "wires": [
            [
                "360e8acd62618140"
            ]
        ]
    },
    {
        "id": "fb2e28811fcc6756",
        "type": "debug",
        "z": "fcffa944a0680a42",
        "name": "Response",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 460,
        "wires": []
    },
    {
        "id": "27d9a5edb0ba97a5",
        "type": "subflow:04a8d6feb3e5bdc7",
        "z": "fcffa944a0680a42",
        "name": "",
        "env": [
            {
                "name": "topic",
                "value": "fridge",
                "type": "str"
            }
        ],
        "x": 310,
        "y": 320,
        "wires": [
            [
                "a8702dfa02f03390"
            ]
        ]
    },
    {
        "id": "e2ea3fae15ab213f",
        "type": "subflow:04a8d6feb3e5bdc7",
        "z": "fcffa944a0680a42",
        "name": "",
        "env": [
            {
                "name": "topic",
                "value": "room",
                "type": "str"
            }
        ],
        "x": 310,
        "y": 360,
        "wires": [
            [
                "a8702dfa02f03390"
            ]
        ]
    },
    {
        "id": "c3c2a02d311239d0",
        "type": "subflow:04a8d6feb3e5bdc7",
        "z": "fcffa944a0680a42",
        "name": "",
        "env": [
            {
                "name": "topic",
                "value": "battery",
                "type": "str"
            }
        ],
        "x": 310,
        "y": 400,
        "wires": [
            [
                "a8702dfa02f03390"
            ]
        ]
    },
    {
        "id": "9015a4834ff0024c",
        "type": "subflow:04a8d6feb3e5bdc7",
        "z": "fcffa944a0680a42",
        "name": "",
        "env": [
            {
                "name": "topic",
                "value": "return",
                "type": "str"
            }
        ],
        "x": 310,
        "y": 440,
        "wires": [
            [
                "a8702dfa02f03390"
            ]
        ]
    },
    {
        "id": "6c08b2d473d2ced1",
        "type": "subflow:04a8d6feb3e5bdc7",
        "z": "fcffa944a0680a42",
        "name": "",
        "env": [
            {
                "name": "topic",
                "value": "fridgeAbsorberModeUser",
                "type": "str"
            }
        ],
        "x": 310,
        "y": 280,
        "wires": [
            [
                "a8702dfa02f03390"
            ]
        ]
    },
    {
        "id": "262c7576d0bcdc93",
        "type": "subflow:1230e5122b3b7f25",
        "z": "fcffa944a0680a42",
        "name": "",
        "env": [
            {
                "name": "message",
                "value": "Fridge",
                "type": "str"
            }
        ],
        "x": 770,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "7e05e1eaee6f9375",
        "type": "function",
        "z": "fcffa944a0680a42",
        "name": "Args",
        "func": "\nlet device = env.get(\"serial-device\");\nlet baud   = env.get(\"serial-baud\");\n\nmsg.payload = `${device} ${baud} ${msg.payload}`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 620,
        "wires": [
            [
                "2f50a3396f8d9a61"
            ]
        ]
    },
    {
        "id": "31753511ce9beb11",
        "type": "function",
        "z": "23d77242da9abfeb",
        "name": "PrintAlerts",
        "func": "\nlet alerts = global.get(\"alerts\") || {};\n\nlet displayStr = Object.values(alerts).join(\"<br>\");\n\nmsg.payload = displayStr || \"✅ No active alerts\";\n\nlet notification = {show: false};\n\nif (displayStr) {\n    notification.payload = `<a href=\"alerts\">⚠️</a>`;\n    notification.show    = true;\n}\n\nreturn [msg, notification];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 180,
        "wires": [
            [
                "e5603df2a4a5ed74"
            ],
            [
                "cbf937b59a299ee6"
            ]
        ]
    },
    {
        "id": "a35ed21ecc0884d7",
        "type": "inject",
        "z": "23d77242da9abfeb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "31753511ce9beb11"
            ]
        ]
    },
    {
        "id": "e5603df2a4a5ed74",
        "type": "ui-text",
        "z": "23d77242da9abfeb",
        "group": "959cc79e3a0c6c7d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Alert messages",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": true,
        "className": "",
        "x": 600,
        "y": 160,
        "wires": []
    },
    {
        "id": "cbf937b59a299ee6",
        "type": "ui-notification",
        "z": "23d77242da9abfeb",
        "ui": "93cf16ef6c7e509b",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "0",
        "showCountdown": false,
        "outputs": 1,
        "allowDismiss": false,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "",
        "raw": true,
        "className": "",
        "name": "Alert notification",
        "x": 600,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "506010c16d2924c9",
        "type": "function",
        "z": "fc670f602d442a02",
        "name": "DecodeJSON",
        "func": "\nlet json = msg.payload;\nlet msgCount = 0\n\nfunction makeMessage(key, defaultValue) {\n    msgCount++;\n    flow.set(\"msgCount\", msgCount);\n    let value = (json[key] !== undefined) ? json[key] : defaultValue;\n    return {\n        topic: key,\n        payload: value\n    };\n}\n\n\nlet messages = [\n    makeMessage(\"fridgeFreezerInstalled\", false),\n    makeMessage(\"fridgeLowBattSoC\", 30),\n    makeMessage(\"fridgeBoostTemp\", 30),\n    makeMessage(\"fridgeBoostHyst\", 5),\n    makeMessage(\"fridgeDefrostMaxTemp\", 23),\n    makeMessage(\"fridgeDefrostTempDec\", 0.5),\n    makeMessage(\"fridgeOpenDoorTempRate\", 0.15),\n    makeMessage(\"fridgeOpenDoorTempInc\", 1),\n\n    makeMessage(\"alarmBattLow\", 20),\n    makeMessage(\"alarmPropaneLow\", 5),\n    makeMessage(\"alarmTempRoomLow\", 5),\n    makeMessage(\"alarmTempRoomHigh\", 35),\n    makeMessage(\"alarmTempFridgeLow\", 1),\n    makeMessage(\"alarmTempFridgeHigh\", 10),\n    makeMessage(\"alarmTempWaterLow\", 5),\n    makeMessage(\"alarmTempCpuHigh\", 70),\n    makeMessage(\"alarmTempBattLow\", 5),\n    makeMessage(\"alarmTempBattHigh\", 30),\n    makeMessage(\"alarmSensorBatt\", 2.7),\n\n    makeMessage(\"offsetTempRoom\", 0),\n    makeMessage(\"offsetTempOutdoor\", 0),\n    makeMessage(\"offsetTempFridge\", 0),\n\n    makeMessage(\"fridgeTargetTemp\", 4),\n    makeMessage(\"fridgeAbsorberMode\", 1),\n\n    {topic: \"apply\", payload: \"\"}\n];\n\nreturn messages;\n",
        "outputs": 25,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 300,
        "wires": [
            [
                "5bca797a0c9db125"
            ],
            [
                "fba0ee1de273b115"
            ],
            [
                "bfaf60179a7a3ec4"
            ],
            [
                "ccaf28b40887c3b2"
            ],
            [
                "f4b8284e3d3b8839"
            ],
            [
                "1f01216242ce5d9e"
            ],
            [
                "ec9b33a5a52234df"
            ],
            [
                "b34eb0f013bae720"
            ],
            [
                "a7111274ce363101"
            ],
            [
                "81bd5b696c87226f"
            ],
            [
                "82e285326856eed3"
            ],
            [
                "e70b81adcb9602b8"
            ],
            [
                "6d16a816d7642db1"
            ],
            [
                "b8fb2935a811a97a"
            ],
            [
                "8d677cec24d11d93"
            ],
            [
                "860bda5c2a9dd42e"
            ],
            [
                "25987568cb65d787"
            ],
            [
                "a5f6c7a1c4b448ad"
            ],
            [
                "cb05b33c54e67be7"
            ],
            [
                "d324d134ed7be272"
            ],
            [
                "fcd70ea12a6311cd"
            ],
            [
                "3f3e3c6195895a6a"
            ],
            [
                "a31fc4d8f53ef9df"
            ],
            [
                "5516c054e1990d91"
            ],
            [
                "a1a0a631bcda2bf9"
            ]
        ]
    },
    {
        "id": "80562d015d907ff7",
        "type": "file in",
        "z": "fc670f602d442a02",
        "name": "Read settings file",
        "filename": "system-settings-file",
        "filenameType": "env",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 220,
        "wires": [
            [
                "0bed306d5de73b26"
            ]
        ]
    },
    {
        "id": "8d498b6002228937",
        "type": "inject",
        "z": "fc670f602d442a02",
        "name": "Once",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "80562d015d907ff7"
            ]
        ]
    },
    {
        "id": "0bed306d5de73b26",
        "type": "subflow:c37eefbf57ce59ee",
        "z": "fc670f602d442a02",
        "name": "",
        "x": 370,
        "y": 280,
        "wires": [
            [
                "506010c16d2924c9"
            ],
            []
        ]
    },
    {
        "id": "c2daddd28170cbb5",
        "type": "function",
        "z": "fc670f602d442a02",
        "name": "EncodeJSON",
        "func": "\nif (msg.topic === \"reset\") {\n    context.set(\"msgCount\", 0);\n    context.set(\"traceEnable\", false);\n    return null;\n}\n\nglobal.set(msg.topic, msg.payload);\ncontext.set(msg.topic, msg.payload);\n\n\nlet numMsgs  = flow.get(\"msgCount\");\nlet msgCount = context.get(\"msgCount\") || 0;\nmsgCount++;\ncontext.set(\"msgCount\", msgCount);\n\nlet traceEnable = context.get(\"traceEnable\");\nif (traceEnable === undefined) traceEnable = true;\nif (traceEnable) {\n    node.log(`Setting: ${msg.topic} = ${msg.payload}`);\n}\n\nlet output = {};\nlet json   = {};\n\nlet keys = context.keys();\nkeys = keys.filter(k => k !== \"msgCount\");\nkeys = keys.filter(k => k !== \"traceEnable\");\n//keys.sort();\nfor (let i = 0; i < keys.length; i++) {\n    json[keys[i]] = context.get(keys[i]);\n}\n\noutput.payload = JSON.stringify(json, null, 2);\n\n \nif (msgCount >= numMsgs) {\n    context.set(\"traceEnable\", true);\n    return output;\n}\nelse {\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 360,
        "wires": [
            [
                "845def41d6e53c7a"
            ]
        ]
    },
    {
        "id": "845def41d6e53c7a",
        "type": "file",
        "z": "fc670f602d442a02",
        "name": "Write settings file",
        "filename": "system-settings-file",
        "filenameType": "env",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1450,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "fba0ee1de273b115",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "name": "Battery save thr",
        "label": "SoC",
        "tooltip": "",
        "order": 4,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": -100,
                "type": "num"
            },
            {
                "label": "10 %",
                "value": 10,
                "type": "num"
            },
            {
                "label": "15 %",
                "value": 15,
                "type": "num"
            },
            {
                "label": "20 %",
                "value": 20,
                "type": "num"
            },
            {
                "label": "25 %",
                "value": 25,
                "type": "num"
            },
            {
                "label": "30 %",
                "value": 30,
                "type": "num"
            },
            {
                "label": "35 %",
                "value": 35,
                "type": "num"
            },
            {
                "label": "40 %",
                "value": 40,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 80,
        "wires": [
            [
                "9417300a8154fe41"
            ]
        ]
    },
    {
        "id": "18b4c5e32e4b3ecb",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Battery save thr",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 80,
        "wires": []
    },
    {
        "id": "e99ba0ba08e83c66",
        "type": "catch",
        "z": "fc670f602d442a02",
        "name": "File not found",
        "scope": [
            "80562d015d907ff7"
        ],
        "uncaught": false,
        "x": 370,
        "y": 320,
        "wires": [
            [
                "506010c16d2924c9"
            ]
        ]
    },
    {
        "id": "151a9ae4fdcbf981",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "order": 5,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Boost start temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 110,
        "y": 120,
        "wires": []
    },
    {
        "id": "bfaf60179a7a3ec4",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "name": "Boost start temp",
        "label": "Temp",
        "tooltip": "",
        "order": 6,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 100,
                "type": "num"
            },
            {
                "label": "27 °C",
                "value": 27,
                "type": "num"
            },
            {
                "label": "28 °C",
                "value": 28,
                "type": "num"
            },
            {
                "label": "29 °C",
                "value": 29,
                "type": "num"
            },
            {
                "label": "30 °C",
                "value": 30,
                "type": "num"
            },
            {
                "label": "31 °C",
                "value": 31,
                "type": "num"
            },
            {
                "label": "32 °C",
                "value": 32,
                "type": "num"
            },
            {
                "label": "33 °C",
                "value": 33,
                "type": "num"
            },
            {
                "label": "34 °C",
                "value": 34,
                "type": "num"
            },
            {
                "label": "35 °C",
                "value": 35,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 890,
        "y": 120,
        "wires": [
            [
                "9417300a8154fe41"
            ]
        ]
    },
    {
        "id": "a1d010ded60a78c2",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "order": 9,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Defrost temp limit",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 110,
        "y": 200,
        "wires": []
    },
    {
        "id": "f4b8284e3d3b8839",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "name": "Max defrost temp",
        "label": "Temp",
        "tooltip": "",
        "order": 10,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 100,
                "type": "num"
            },
            {
                "label": "20 °C",
                "value": 20,
                "type": "num"
            },
            {
                "label": "21 °C",
                "value": 21,
                "type": "num"
            },
            {
                "label": "22 °C",
                "value": 22,
                "type": "num"
            },
            {
                "label": "23 °C",
                "value": 23,
                "type": "num"
            },
            {
                "label": "24 °C",
                "value": 24,
                "type": "num"
            },
            {
                "label": "25 °C",
                "value": 25,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 890,
        "y": 200,
        "wires": [
            [
                "9417300a8154fe41"
            ]
        ]
    },
    {
        "id": "e8b0af4b196a7a41",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "order": 11,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Defrost pre-cool",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 240,
        "wires": []
    },
    {
        "id": "1f01216242ce5d9e",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "name": "Defrost pre-cool",
        "label": "Offset",
        "tooltip": "",
        "order": 12,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 0,
                "type": "num"
            },
            {
                "label": "-0.5 °C",
                "value": 0.5,
                "type": "num"
            },
            {
                "label": "-0.8 °C",
                "value": 0.8,
                "type": "num"
            },
            {
                "label": "-1 °C",
                "value": 1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 240,
        "wires": [
            [
                "9417300a8154fe41"
            ]
        ]
    },
    {
        "id": "a4d0ddc1c8a5c8dc",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "order": 13,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "ODD rate trigger",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 280,
        "wires": []
    },
    {
        "id": "ec9b33a5a52234df",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "name": "ODD rate trigger",
        "label": "Sensitivity",
        "tooltip": "",
        "order": 14,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 100,
                "type": "num"
            },
            {
                "label": "Low",
                "value": 0.2,
                "type": "num"
            },
            {
                "label": "Medium",
                "value": 0.15,
                "type": "num"
            },
            {
                "label": "High",
                "value": 0.1,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 280,
        "wires": [
            [
                "9417300a8154fe41"
            ]
        ]
    },
    {
        "id": "a86cc2cc4fef9255",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "order": 15,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "ODD temp trigger",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 110,
        "y": 320,
        "wires": []
    },
    {
        "id": "b34eb0f013bae720",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "name": "ODD temp trigger",
        "label": "Offset",
        "tooltip": "",
        "order": 16,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 100,
                "type": "num"
            },
            {
                "label": "+1 °C",
                "value": 1,
                "type": "num"
            },
            {
                "label": "+1.5 °C",
                "value": 1.5,
                "type": "num"
            },
            {
                "label": "+2 °C",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 890,
        "y": 320,
        "wires": [
            [
                "9417300a8154fe41"
            ]
        ]
    },
    {
        "id": "347a2406cb5b4339",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Low battery",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 90,
        "y": 440,
        "wires": []
    },
    {
        "id": "a7111274ce363101",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "Low battery",
        "label": "SoC",
        "tooltip": "",
        "order": 2,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": -100,
                "type": "num"
            },
            {
                "label": "10 %",
                "value": 10,
                "type": "num"
            },
            {
                "label": "15 %",
                "value": 15,
                "type": "num"
            },
            {
                "label": "20 %",
                "value": 20,
                "type": "num"
            },
            {
                "label": "25 %",
                "value": 25,
                "type": "num"
            },
            {
                "label": "30 %",
                "value": 30,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 870,
        "y": 440,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "87614e276e608079",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Low propane",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 90,
        "y": 480,
        "wires": []
    },
    {
        "id": "81bd5b696c87226f",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "Low propane",
        "label": "Level",
        "tooltip": "",
        "order": 4,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": -1,
                "type": "num"
            },
            {
                "label": "5 %",
                "value": 5,
                "type": "num"
            },
            {
                "label": "10 %",
                "value": 10,
                "type": "num"
            },
            {
                "label": "15 %",
                "value": 15,
                "type": "num"
            },
            {
                "label": "20 %",
                "value": 20,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "5123c94abd63d6d6",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 9,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Low room temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 520,
        "wires": []
    },
    {
        "id": "82e285326856eed3",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "Low room temp",
        "label": "Temp",
        "tooltip": "",
        "order": 10,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": -100,
                "type": "num"
            },
            {
                "label": "1 °C",
                "value": 1,
                "type": "num"
            },
            {
                "label": "3 °C",
                "value": 3,
                "type": "num"
            },
            {
                "label": "5 °C",
                "value": 5,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 520,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "d6c1b877c8831b43",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 11,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "High room temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 560,
        "wires": []
    },
    {
        "id": "e70b81adcb9602b8",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "High room temp",
        "label": "Temp",
        "tooltip": "",
        "order": 12,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 100,
                "type": "num"
            },
            {
                "label": "30 °C",
                "value": 30,
                "type": "num"
            },
            {
                "label": "35 °C",
                "value": 35,
                "type": "num"
            },
            {
                "label": "40 °C",
                "value": 40,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 560,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "8186a35e8b5e6e89",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 13,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Low fridge temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 600,
        "wires": []
    },
    {
        "id": "9f6dd093e80efbed",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 15,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "High fridge temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 110,
        "y": 640,
        "wires": []
    },
    {
        "id": "6d16a816d7642db1",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "Low fridge temp",
        "label": "Temp",
        "tooltip": "",
        "order": 14,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": -100,
                "type": "num"
            },
            {
                "label": "0 °C",
                "value": 0,
                "type": "num"
            },
            {
                "label": "1 °C",
                "value": 1,
                "type": "num"
            },
            {
                "label": "2 °C",
                "value": 2,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 600,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "b8fb2935a811a97a",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "High fridge temp",
        "label": "Temp",
        "tooltip": "",
        "order": 16,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 100,
                "type": "num"
            },
            {
                "label": "6 °C",
                "value": 6,
                "type": "num"
            },
            {
                "label": "8 °C",
                "value": 8,
                "type": "num"
            },
            {
                "label": "10 °C",
                "value": 10,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 890,
        "y": 640,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "22210b7502b7c1a4",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 17,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Low water temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 680,
        "wires": []
    },
    {
        "id": "8d677cec24d11d93",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "Low water temp",
        "label": "Temp",
        "tooltip": "",
        "order": 18,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": -100,
                "type": "num"
            },
            {
                "label": "1 °C",
                "value": 1,
                "type": "num"
            },
            {
                "label": "3 °C",
                "value": 3,
                "type": "num"
            },
            {
                "label": "5 °C",
                "value": 5,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 680,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "a19269c6fc555be2",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 19,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "High CPU temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 720,
        "wires": []
    },
    {
        "id": "860bda5c2a9dd42e",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "High CPU temp",
        "label": "Temp",
        "tooltip": "",
        "order": 20,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 1000,
                "type": "num"
            },
            {
                "label": "70 °C",
                "value": 70,
                "type": "num"
            },
            {
                "label": "75 °C",
                "value": 75,
                "type": "num"
            },
            {
                "label": "80 °C",
                "value": 80,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 720,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "37d2c5cb64e6a204",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 5,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Low battery temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 110,
        "y": 760,
        "wires": []
    },
    {
        "id": "55ba3760bf3146e8",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 7,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "High battery temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 110,
        "y": 800,
        "wires": []
    },
    {
        "id": "a5f6c7a1c4b448ad",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "High battery temp",
        "label": "Temp",
        "tooltip": "",
        "order": 8,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 100,
                "type": "num"
            },
            {
                "label": "30 °C",
                "value": 30,
                "type": "num"
            },
            {
                "label": "35 °C",
                "value": 35,
                "type": "num"
            },
            {
                "label": "40 °C",
                "value": 40,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 890,
        "y": 800,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "25987568cb65d787",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "Low battery temp",
        "label": "Temp",
        "tooltip": "",
        "order": 6,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": -100,
                "type": "num"
            },
            {
                "label": "1 °C",
                "value": 1,
                "type": "num"
            },
            {
                "label": "3 °C",
                "value": 3,
                "type": "num"
            },
            {
                "label": "5 °C",
                "value": 5,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 890,
        "y": 760,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "7d5ec36ed650166a",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "7a52027f8ab130e8",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Room temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 90,
        "y": 960,
        "wires": []
    },
    {
        "id": "d324d134ed7be272",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "7a52027f8ab130e8",
        "name": "Room temp",
        "label": "Offset",
        "tooltip": "",
        "order": 2,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "-0.5 °C",
                "value": -0.5,
                "type": "num"
            },
            {
                "label": "-0.4 °C",
                "value": -0.4,
                "type": "num"
            },
            {
                "label": "-0.3 °C",
                "value": -0.3,
                "type": "num"
            },
            {
                "label": "-0.2 °C",
                "value": -0.2,
                "type": "num"
            },
            {
                "label": "-0.1 °C",
                "value": -0.1,
                "type": "num"
            },
            {
                "label": "0 °C",
                "value": 0,
                "type": "num"
            },
            {
                "label": "+0.1 °C",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "+0.2 °C",
                "value": 0.2,
                "type": "num"
            },
            {
                "label": "+0.3 °C",
                "value": 0.3,
                "type": "num"
            },
            {
                "label": "+0.4 °C",
                "value": 0.4,
                "type": "num"
            },
            {
                "label": "+0.5 °C",
                "value": 0.5,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 870,
        "y": 960,
        "wires": [
            [
                "08ebf0b647182af1"
            ]
        ]
    },
    {
        "id": "92b7ed45b9d16c2d",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "7a52027f8ab130e8",
        "order": 3,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Outdoor temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 1000,
        "wires": []
    },
    {
        "id": "fcd70ea12a6311cd",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "7a52027f8ab130e8",
        "name": "Outdoor temp",
        "label": "Offset",
        "tooltip": "",
        "order": 4,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "-0.5 °C",
                "value": -0.5,
                "type": "num"
            },
            {
                "label": "-0.4 °C",
                "value": -0.4,
                "type": "num"
            },
            {
                "label": "-0.3 °C",
                "value": -0.3,
                "type": "num"
            },
            {
                "label": "-0.2 °C",
                "value": -0.2,
                "type": "num"
            },
            {
                "label": "-0.1 °C",
                "value": -0.1,
                "type": "num"
            },
            {
                "label": "0 °C",
                "value": 0,
                "type": "num"
            },
            {
                "label": "+0.1 °C",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "+0.2 °C",
                "value": 0.2,
                "type": "num"
            },
            {
                "label": "+0.3 °C",
                "value": 0.3,
                "type": "num"
            },
            {
                "label": "+0.4 °C",
                "value": 0.4,
                "type": "num"
            },
            {
                "label": "+0.5 °C",
                "value": 0.5,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 1000,
        "wires": [
            [
                "08ebf0b647182af1"
            ]
        ]
    },
    {
        "id": "236ffef52d62e8b8",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "7a52027f8ab130e8",
        "order": 5,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Fridge temp",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 90,
        "y": 1040,
        "wires": []
    },
    {
        "id": "3f3e3c6195895a6a",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "7a52027f8ab130e8",
        "name": "Fridge temp",
        "label": "Offset",
        "tooltip": "",
        "order": 6,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "-0.5 °C",
                "value": -0.5,
                "type": "num"
            },
            {
                "label": "-0.4 °C",
                "value": -0.4,
                "type": "num"
            },
            {
                "label": "-0.3 °C",
                "value": -0.3,
                "type": "num"
            },
            {
                "label": "-0.2 °C",
                "value": -0.2,
                "type": "num"
            },
            {
                "label": "-0.1 °C",
                "value": -0.1,
                "type": "num"
            },
            {
                "label": "0 °C",
                "value": 0,
                "type": "num"
            },
            {
                "label": "+0.1 °C",
                "value": 0.1,
                "type": "num"
            },
            {
                "label": "+0.2 °C",
                "value": 0.2,
                "type": "num"
            },
            {
                "label": "+0.3 °C",
                "value": 0.3,
                "type": "num"
            },
            {
                "label": "+0.4 °C",
                "value": 0.4,
                "type": "num"
            },
            {
                "label": "+0.5 °C",
                "value": 0.5,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 870,
        "y": 1040,
        "wires": [
            [
                "08ebf0b647182af1"
            ]
        ]
    },
    {
        "id": "ef7f15d0f953b171",
        "type": "link in",
        "z": "fc670f602d442a02",
        "name": "Settings",
        "links": [
            "236fdb56f87224ab"
        ],
        "x": 1025,
        "y": 1180,
        "wires": [
            [
                "c2daddd28170cbb5"
            ]
        ]
    },
    {
        "id": "a31fc4d8f53ef9df",
        "type": "link out",
        "z": "fc670f602d442a02",
        "name": "Fridge target temp",
        "mode": "link",
        "links": [
            "b8de84a1a12a151c"
        ],
        "x": 815,
        "y": 1160,
        "wires": []
    },
    {
        "id": "5516c054e1990d91",
        "type": "link out",
        "z": "fc670f602d442a02",
        "name": "Fridge absorber mode",
        "mode": "link",
        "links": [
            "0ffbdf4fdf3d401d"
        ],
        "x": 815,
        "y": 1200,
        "wires": []
    },
    {
        "id": "eaa15de8f7205f01",
        "type": "ui-button",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "name": "Apply 1",
        "label": "Apply",
        "order": 17,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "apply",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 880,
        "y": 380,
        "wires": [
            [
                "9417300a8154fe41"
            ]
        ]
    },
    {
        "id": "a1a0a631bcda2bf9",
        "type": "delay",
        "z": "fc670f602d442a02",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 590,
        "y": 540,
        "wires": [
            [
                "9417300a8154fe41",
                "c5cd6710bd410a34",
                "08ebf0b647182af1"
            ]
        ]
    },
    {
        "id": "25ff927976e89036",
        "type": "ui-button",
        "z": "fc670f602d442a02",
        "group": "7a52027f8ab130e8",
        "name": "Apply 3",
        "label": "Apply",
        "order": 7,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "apply",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 880,
        "y": 1100,
        "wires": [
            [
                "08ebf0b647182af1"
            ]
        ]
    },
    {
        "id": "5c3e7eda6064c1be",
        "type": "ui-button",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "Apply 2",
        "label": "Apply",
        "order": 23,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "",
        "payloadType": "str",
        "topic": "apply",
        "topicType": "str",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 880,
        "y": 900,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "ccaf28b40887c3b2",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "name": "Boost stop hyst",
        "label": "Offset",
        "tooltip": "",
        "order": 8,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "0 °C",
                "value": 0,
                "type": "num"
            },
            {
                "label": "-1 °C",
                "value": 1,
                "type": "num"
            },
            {
                "label": "-2 °C",
                "value": 2,
                "type": "num"
            },
            {
                "label": "-3 °C",
                "value": 3,
                "type": "num"
            },
            {
                "label": "-4 °C",
                "value": 4,
                "type": "num"
            },
            {
                "label": "-5 °C",
                "value": 5,
                "type": "num"
            },
            {
                "label": "-6 °C",
                "value": 6,
                "type": "num"
            },
            {
                "label": "-7 °C",
                "value": 7,
                "type": "num"
            },
            {
                "label": "-8 °C",
                "value": 8,
                "type": "num"
            },
            {
                "label": "-9 °C",
                "value": 9,
                "type": "num"
            },
            {
                "label": "-10 °C",
                "value": 10,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 160,
        "wires": [
            [
                "9417300a8154fe41"
            ]
        ]
    },
    {
        "id": "702408012e192f10",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "order": 7,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Boost stop hyst",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 160,
        "wires": []
    },
    {
        "id": "5bca797a0c9db125",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "name": "Freezer installed",
        "label": "Installed",
        "tooltip": "",
        "order": 2,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "Yes",
                "value": true,
                "type": "bool"
            },
            {
                "label": "No",
                "value": false,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 40,
        "wires": [
            [
                "9417300a8154fe41"
            ]
        ]
    },
    {
        "id": "5d29e6ac5ca4eb63",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "28b10b40908e96b0",
        "order": 1,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Freezer installed",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 40,
        "wires": []
    },
    {
        "id": "9417300a8154fe41",
        "type": "subflow:521836fa35cf581b",
        "z": "fc670f602d442a02",
        "name": "",
        "x": 1170,
        "y": 240,
        "wires": [
            [
                "c2daddd28170cbb5"
            ],
            [
                "80562d015d907ff7",
                "c2daddd28170cbb5"
            ],
            [
                "eaa15de8f7205f01"
            ]
        ]
    },
    {
        "id": "c5cd6710bd410a34",
        "type": "subflow:521836fa35cf581b",
        "z": "fc670f602d442a02",
        "name": "",
        "x": 1170,
        "y": 480,
        "wires": [
            [
                "c2daddd28170cbb5"
            ],
            [
                "c2daddd28170cbb5",
                "80562d015d907ff7"
            ],
            [
                "5c3e7eda6064c1be"
            ]
        ]
    },
    {
        "id": "08ebf0b647182af1",
        "type": "subflow:521836fa35cf581b",
        "z": "fc670f602d442a02",
        "name": "",
        "x": 1170,
        "y": 940,
        "wires": [
            [
                "c2daddd28170cbb5"
            ],
            [
                "c2daddd28170cbb5",
                "80562d015d907ff7"
            ],
            [
                "25ff927976e89036"
            ]
        ]
    },
    {
        "id": "cb05b33c54e67be7",
        "type": "ui-dropdown",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "name": "Sensor battery",
        "label": "State",
        "tooltip": "",
        "order": 22,
        "width": 3,
        "height": "",
        "passthru": true,
        "multiple": false,
        "chips": false,
        "clearable": false,
        "options": [
            {
                "label": "OFF",
                "value": 0,
                "type": "num"
            },
            {
                "label": "ON",
                "value": 2.7,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "typeIsComboBox": false,
        "msgTrigger": "onChange",
        "x": 880,
        "y": 840,
        "wires": [
            [
                "c5cd6710bd410a34"
            ]
        ]
    },
    {
        "id": "130cb3339fd8b8de",
        "type": "ui-text",
        "z": "fc670f602d442a02",
        "group": "87a251b1b078a4c3",
        "order": 21,
        "width": "3",
        "height": "1",
        "name": "",
        "label": "Sensor battery",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 100,
        "y": 840,
        "wires": []
    }
]